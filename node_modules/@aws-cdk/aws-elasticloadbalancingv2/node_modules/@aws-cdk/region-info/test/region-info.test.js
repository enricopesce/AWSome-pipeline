"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const aws_entities_1 = require("../build-tools/aws-entities");
const lib_1 = require("../lib");
test('built-in data is correct', () => {
    const snapshot = {};
    for (const name of aws_entities_1.AWS_REGIONS) {
        const region = lib_1.RegionInfo.get(name);
        const servicePrincipals = {};
        aws_entities_1.AWS_SERVICES.forEach(service => servicePrincipals[service] = region.servicePrincipal(service));
        snapshot[name] = {
            cdkMetadataResourceAvailable: region.cdkMetadataResourceAvailable,
            domainSuffix: region.domainSuffix,
            partition: region.partition,
            s3StaticWebsiteEndpoint: region.s3StaticWebsiteEndpoint,
            vpcEndPointServiceNamePrefix: region.vpcEndpointServiceNamePrefix,
            servicePrincipals,
        };
    }
    expect(snapshot).toMatchSnapshot();
});
test('built-in data features known regions', () => {
    const regions = lib_1.RegionInfo.regions;
    for (const expected of aws_entities_1.AWS_REGIONS) {
        expect(regions.map(region => region.name)).toContain(expected);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnaW9uLWluZm8udGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInJlZ2lvbi1pbmZvLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw4REFBd0U7QUFDeEUsZ0NBQW9DO0FBRXBDLElBQUksQ0FBQywwQkFBMEIsRUFBRSxHQUFHLEVBQUU7SUFDcEMsTUFBTSxRQUFRLEdBQVEsRUFBRSxDQUFDO0lBQ3pCLEtBQUssTUFBTSxJQUFJLElBQUksMEJBQVcsRUFBRTtRQUM5QixNQUFNLE1BQU0sR0FBRyxnQkFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVwQyxNQUFNLGlCQUFpQixHQUE4QyxFQUFFLENBQUM7UUFDeEUsMkJBQVksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsR0FBRyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUUvRixRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUc7WUFDZiw0QkFBNEIsRUFBRSxNQUFNLENBQUMsNEJBQTRCO1lBQ2pFLFlBQVksRUFBRSxNQUFNLENBQUMsWUFBWTtZQUNqQyxTQUFTLEVBQUUsTUFBTSxDQUFDLFNBQVM7WUFDM0IsdUJBQXVCLEVBQUUsTUFBTSxDQUFDLHVCQUF1QjtZQUN2RCw0QkFBNEIsRUFBRSxNQUFNLENBQUMsNEJBQTRCO1lBQ2pFLGlCQUFpQjtTQUNsQixDQUFDO0tBQ0g7SUFDRCxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsZUFBZSxFQUFFLENBQUM7QUFDckMsQ0FBQyxDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMsc0NBQXNDLEVBQUUsR0FBRyxFQUFFO0lBQ2hELE1BQU0sT0FBTyxHQUFHLGdCQUFVLENBQUMsT0FBTyxDQUFDO0lBRW5DLEtBQUssTUFBTSxRQUFRLElBQUksMEJBQVcsRUFBRTtRQUNsQyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUNoRTtBQUNILENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQVdTX1JFR0lPTlMsIEFXU19TRVJWSUNFUyB9IGZyb20gJy4uL2J1aWxkLXRvb2xzL2F3cy1lbnRpdGllcyc7XG5pbXBvcnQgeyBSZWdpb25JbmZvIH0gZnJvbSAnLi4vbGliJztcblxudGVzdCgnYnVpbHQtaW4gZGF0YSBpcyBjb3JyZWN0JywgKCkgPT4ge1xuICBjb25zdCBzbmFwc2hvdDogYW55ID0ge307XG4gIGZvciAoY29uc3QgbmFtZSBvZiBBV1NfUkVHSU9OUykge1xuICAgIGNvbnN0IHJlZ2lvbiA9IFJlZ2lvbkluZm8uZ2V0KG5hbWUpO1xuXG4gICAgY29uc3Qgc2VydmljZVByaW5jaXBhbHM6IHsgW3NlcnZpY2U6IHN0cmluZ106IHN0cmluZyB8IHVuZGVmaW5lZCB9ID0ge307XG4gICAgQVdTX1NFUlZJQ0VTLmZvckVhY2goc2VydmljZSA9PiBzZXJ2aWNlUHJpbmNpcGFsc1tzZXJ2aWNlXSA9IHJlZ2lvbi5zZXJ2aWNlUHJpbmNpcGFsKHNlcnZpY2UpKTtcblxuICAgIHNuYXBzaG90W25hbWVdID0ge1xuICAgICAgY2RrTWV0YWRhdGFSZXNvdXJjZUF2YWlsYWJsZTogcmVnaW9uLmNka01ldGFkYXRhUmVzb3VyY2VBdmFpbGFibGUsXG4gICAgICBkb21haW5TdWZmaXg6IHJlZ2lvbi5kb21haW5TdWZmaXgsXG4gICAgICBwYXJ0aXRpb246IHJlZ2lvbi5wYXJ0aXRpb24sXG4gICAgICBzM1N0YXRpY1dlYnNpdGVFbmRwb2ludDogcmVnaW9uLnMzU3RhdGljV2Vic2l0ZUVuZHBvaW50LFxuICAgICAgdnBjRW5kUG9pbnRTZXJ2aWNlTmFtZVByZWZpeDogcmVnaW9uLnZwY0VuZHBvaW50U2VydmljZU5hbWVQcmVmaXgsXG4gICAgICBzZXJ2aWNlUHJpbmNpcGFscyxcbiAgICB9O1xuICB9XG4gIGV4cGVjdChzbmFwc2hvdCkudG9NYXRjaFNuYXBzaG90KCk7XG59KTtcblxudGVzdCgnYnVpbHQtaW4gZGF0YSBmZWF0dXJlcyBrbm93biByZWdpb25zJywgKCkgPT4ge1xuICBjb25zdCByZWdpb25zID0gUmVnaW9uSW5mby5yZWdpb25zO1xuXG4gIGZvciAoY29uc3QgZXhwZWN0ZWQgb2YgQVdTX1JFR0lPTlMpIHtcbiAgICBleHBlY3QocmVnaW9ucy5tYXAocmVnaW9uID0+IHJlZ2lvbi5uYW1lKSkudG9Db250YWluKGV4cGVjdGVkKTtcbiAgfVxufSk7XG4iXX0=