{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "bundled": {
    "jsonschema": "^1.2.5",
    "semver": "^7.2.2"
  },
  "description": "Cloud Assembly Schema",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.6.0 (build 248e75b)",
  "keywords": [
    "aws",
    "cdk"
  ],
  "license": "Apache-2.0",
  "name": "@aws-cdk/cloud-assembly-schema",
  "readme": {
    "markdown": "## Cloud Assembly Schema\n<!--BEGIN STABILITY BANNER-->\n---\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n<!--END STABILITY BANNER-->\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n## Cloud Assembly\n\nThe *Cloud Assembly* is the output of the synthesis operation. It is produced as part of the\n[`cdk synth`](https://github.com/aws/aws-cdk/tree/master/packages/aws-cdk#cdk-synthesize)\ncommand, or the [`app.synth()`](https://github.com/aws/aws-cdk/blob/master/packages/@aws-cdk/core/lib/app.ts#L135) method invocation.\n\nIts essentially a set of files and directories, one of which is the `manifest.json` file. It defines the set of instructions that are\nneeded in order to deploy the assembly directory.\n\n> For example, when `cdk deploy` is executed, the CLI reads this file and performs its instructions:\n> - Build container images.\n> - Upload assets.\n> - Deploy CloudFormation templates.\n\nTherefore, the assembly is how the CDK class library and CDK CLI (or any other consumer) communicate. To ensure compatibility\nbetween the assembly and its consumers, we treat the manifest file as a well defined, versioned schema.\n\n## Schema\n\nThis module contains the typescript structs that comprise the `manifest.json` file, as well as the\ngenerated [*json-schema*](./schema/cloud-assembly.schema.json).\n\n## Versioning\n\nThe schema version is specified in the [`cloud-assembly.version.json`](./schema/cloud-assembly.schema.json) file, under the `version` property.\nIt follows semantic versioning, but with a small twist.\n\nWhen we add instructions to the assembly, they are reflected in the manifest file and the *json-schema* accordingly.\nEvery such instruction, is crucial for ensuring the correct deployment behavior. This means that to properly deploy a cloud assembly,\nconsumers must be aware of every such instruction modification.\n\nFor this reason, every change to the schema, even though it might not strictly break validation of the *json-schema* format,\nis considered `major` version bump.\n\n## How to consume\n\nIf you'd like to consume the [schema file](./schema/cloud-assembly.schema.json) in order to do validations on `manifest.json` files,\nsimply download it from this repo and run it against standard *json-schema* validators, such as [jsonschema](https://www.npmjs.com/package/jsonschema).\n\nConsumers must take into account the `major` version of the schema they are consuming. They should reject cloud assemblies\nwith a `major` version that is higher than what they expect. While schema validation might pass on such assemblies, the deployment integrity\ncannot be guaranteed because some instructions will be ignored.\n\n> For example, if your consumer was built when the schema version was 2.0.0, you should reject deploying cloud assemblies with a\n> manifest version of 3.0.0.\n\n## Contributing\n\nSee [Contribution Guide](./CONTRIBUTING.md)"
  },
  "repository": {
    "directory": "packages/@aws-cdk/cloud-assembly-schema",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.CloudAssembly.Schema",
      "packageId": "Amazon.CDK.CloudAssembly.Schema",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "cdk-cloud-assembly-schema",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.cloudassembly.schema"
    },
    "js": {
      "npm": "@aws-cdk/cloud-assembly-schema"
    },
    "python": {
      "distName": "aws-cdk.cloud-assembly-schema",
      "module": "aws_cdk.cloud_assembly_schema"
    }
  },
  "types": {
    "@aws-cdk/cloud-assembly-schema.AmiContextQuery": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Query to AMI context provider."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.AmiContextQuery",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context-queries.ts",
        "line": 41
      },
      "name": "AmiContextQuery",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Account to query."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 45
          },
          "name": "account",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Filters to DescribeImages call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 62
          },
          "name": "filters",
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Region to query."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 50
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All owners",
            "stability": "stable",
            "summary": "Owners to DescribeImages call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 57
          },
          "name": "owners",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.ArtifactManifest": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A manifest for a single artifact within the cloud assembly."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactManifest",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema.ts",
        "line": 68
      },
      "name": "ArtifactManifest",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 72
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no dependencies.",
            "stability": "stable",
            "summary": "IDs of artifacts that must be deployed before this artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 93
          },
          "name": "dependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no envrionment.",
            "stability": "stable",
            "summary": "The environment into which this artifact is deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 79
          },
          "name": "environment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no metadata.",
            "stability": "stable",
            "summary": "Associated metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 86
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/cloud-assembly-schema.MetadataEntry"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no properties.",
            "stability": "stable",
            "summary": "The set of properties for this artifact (depends on type)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 100
          },
          "name": "properties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cloud-assembly-schema.AwsCloudFormationStackProperties"
                },
                {
                  "fqn": "@aws-cdk/cloud-assembly-schema.AssetManifestProperties"
                },
                {
                  "fqn": "@aws-cdk/cloud-assembly-schema.TreeArtifactProperties"
                },
                {
                  "fqn": "@aws-cdk/cloud-assembly-schema.NestedCloudAssemblyProperties"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.ArtifactMetadataEntryType": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "docs": {
        "stability": "stable",
        "summary": "Type of artifact metadata entry."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactMetadataEntryType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/metadata-schema.ts",
        "line": 161
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Asset in metadata."
          },
          "name": "ASSET"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Metadata key used to print INFO-level messages by the toolkit when an app is syntheized."
          },
          "name": "INFO"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Metadata key used to print WARNING-level messages by the toolkit when an app is syntheized."
          },
          "name": "WARN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Metadata key used to print ERROR-level messages by the toolkit when an app is syntheized."
          },
          "name": "ERROR"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Represents the CloudFormation logical ID of a resource at a certain path."
          },
          "name": "LOGICAL_ID"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Represents tags of a stack."
          },
          "name": "STACK_TAGS"
        }
      ],
      "name": "ArtifactMetadataEntryType"
    },
    "@aws-cdk/cloud-assembly-schema.ArtifactType": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "docs": {
        "stability": "stable",
        "summary": "Type of cloud artifact."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/schema.ts",
        "line": 8
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Stub required because of JSII."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The artifact is an AWS CloudFormation stack."
          },
          "name": "AWS_CLOUDFORMATION_STACK"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The artifact contains the CDK application's construct tree."
          },
          "name": "CDK_TREE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Manifest for all assets in the Cloud Assembly."
          },
          "name": "ASSET_MANIFEST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Nested Cloud Assembly."
          },
          "name": "NESTED_CLOUD_ASSEMBLY"
        }
      ],
      "name": "ArtifactType"
    },
    "@aws-cdk/cloud-assembly-schema.AssemblyManifest": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A manifest which describes the cloud assembly."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.AssemblyManifest",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema.ts",
        "line": 106
      },
      "name": "AssemblyManifest",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Protocol version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 110
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no artifacts.",
            "stability": "stable",
            "summary": "The set of artifacts in this assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 117
          },
          "name": "artifacts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactManifest"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no missing context.",
            "remarks": "If this field has values, it means that the\ncloud assembly is not complete and should not be deployed.",
            "stability": "stable",
            "summary": "Missing context information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 125
          },
          "name": "missing",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cloud-assembly-schema.MissingContext"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no info.",
            "stability": "stable",
            "summary": "Runtime information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 132
          },
          "name": "runtime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/cloud-assembly-schema.RuntimeInfo"
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.AssetManifestProperties": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Artifact properties for the Asset Manifest."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.AssetManifestProperties",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/artifact-schema.ts",
        "line": 63
      },
      "name": "AssetManifestProperties",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Filename of the asset manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact-schema.ts",
            "line": 67
          },
          "name": "file",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Version 1 (basic modern bootstrap stack)",
            "stability": "stable",
            "summary": "Version of bootstrap stack required to deploy this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact-schema.ts",
            "line": 74
          },
          "name": "requiresBootstrapStackVersion",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.AvailabilityZonesContextQuery": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Query to availability zone context provider."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.AvailabilityZonesContextQuery",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context-queries.ts",
        "line": 68
      },
      "name": "AvailabilityZonesContextQuery",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Query account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 72
          },
          "name": "account",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Query region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 77
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.AwsCloudFormationStackProperties": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Artifact properties for CloudFormation stacks."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.AwsCloudFormationStackProperties",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/artifact-schema.ts",
        "line": 5
      },
      "name": "AwsCloudFormationStackProperties",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A file relative to the assembly root which contains the CloudFormation template for this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact-schema.ts",
            "line": 9
          },
          "name": "templateFile",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No role is assumed (current credentials are used)",
            "stability": "stable",
            "summary": "The role that needs to be assumed to deploy the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact-schema.ts",
            "line": 36
          },
          "name": "assumeRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No role is passed (currently assumed role/credentials are used)",
            "stability": "stable",
            "summary": "The role that is passed to CloudFormation to execute the change set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact-schema.ts",
            "line": 43
          },
          "name": "cloudFormationExecutionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No parameters",
            "stability": "stable",
            "summary": "Values for CloudFormation stack parameters that should be passed when the stack is deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact-schema.ts",
            "line": 16
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No bootstrap stack required",
            "stability": "stable",
            "summary": "Version of bootstrap stack required to deploy this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact-schema.ts",
            "line": 57
          },
          "name": "requiresBootstrapStackVersion",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- name derived from artifact ID",
            "stability": "stable",
            "summary": "The name to use for the CloudFormation stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact-schema.ts",
            "line": 22
          },
          "name": "stackName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not uploaded yet, upload just before deploying",
            "stability": "stable",
            "summary": "If the stack template has already been included in the asset manifest, its asset URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact-schema.ts",
            "line": 50
          },
          "name": "stackTemplateAssetObjectUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to enable termination protection for this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact-schema.ts",
            "line": 29
          },
          "name": "terminationProtection",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.ContainerImageAssetMetadataEntry": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Metadata Entry spec for container images."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.ContainerImageAssetMetadataEntry",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metadata-schema.ts",
        "line": 69
      },
      "name": "ContainerImageAssetMetadataEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Logical identifier for the asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 13
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 73
          },
          "name": "packaging",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Path on disk to the asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 23
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The hash of the asset source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 18
          },
          "name": "sourceHash",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no build args are passed",
            "stability": "stable",
            "summary": "Build args to pass to the `docker build` command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 111
          },
          "name": "buildArgs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no file is passed",
            "stability": "stable",
            "summary": "Path to the Dockerfile (relative to the directory)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 125
          },
          "name": "file",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined If not specified, `repositoryName` and `imageTag` are\nrequired because otherwise how will the stack know where to find the asset,\nha?",
            "deprecated": "specify `repositoryName` and `imageTag` instead, and then you\nknow where the image will go.",
            "stability": "deprecated",
            "summary": "ECR Repository name and repo digest (separated by \"@sha256:\") where this image is stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 85
          },
          "name": "imageNameParameter",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- this parameter is REQUIRED after 1.21.0",
            "remarks": "This field is\nrequired if `imageParameterName` is ommited (otherwise, the app won't be\nable to find the image).",
            "stability": "stable",
            "summary": "The docker image tag to use for tagging pushed images."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 104
          },
          "name": "imageTag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- this parameter is REQUIRED after 1.21.0",
            "remarks": "Specify this property if you need to statically address the\nimage, e.g. from a Kubernetes Pod. Note, this is only the repository name,\nwithout the registry and the tag parts.",
            "stability": "stable",
            "summary": "ECR repository name, if omitted a default name based on the asset's ID is used instead."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 95
          },
          "name": "repositoryName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no build target",
            "stability": "stable",
            "summary": "Docker target to build to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 118
          },
          "name": "target",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.ContextProvider": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "docs": {
        "stability": "stable",
        "summary": "Identifier for the context provider."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.ContextProvider",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/context-queries.ts",
        "line": 5
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "AMI provider."
          },
          "name": "AMI_PROVIDER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "AZ provider."
          },
          "name": "AVAILABILITY_ZONE_PROVIDER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Route53 Hosted Zone provider."
          },
          "name": "HOSTED_ZONE_PROVIDER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "SSM Parameter Provider."
          },
          "name": "SSM_PARAMETER_PROVIDER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "VPC Provider."
          },
          "name": "VPC_PROVIDER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "VPC Endpoint Service AZ Provider."
          },
          "name": "ENDPOINT_SERVICE_AVAILABILITY_ZONE_PROVIDER"
        }
      ],
      "name": "ContextProvider"
    },
    "@aws-cdk/cloud-assembly-schema.EndpointServiceAvailabilityZonesContextQuery": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Query to endpoint service context provider."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.EndpointServiceAvailabilityZonesContextQuery",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context-queries.ts",
        "line": 182
      },
      "name": "EndpointServiceAvailabilityZonesContextQuery",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Query account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 186
          },
          "name": "account",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Query region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 191
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Query service name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 196
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.FileAssetMetadataEntry": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Metadata Entry spec for files."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.FileAssetMetadataEntry",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metadata-schema.ts",
        "line": 29
      },
      "name": "FileAssetMetadataEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the parameter where the hash of the bundled asset should be passed in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 48
          },
          "name": "artifactHashParameter",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Logical identifier for the asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 13
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Requested packaging style."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 33
          },
          "name": "packaging",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Path on disk to the asset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 23
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of parameter where S3 bucket should be passed in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 38
          },
          "name": "s3BucketParameter",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of parameter where S3 key should be passed in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 43
          },
          "name": "s3KeyParameter",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The hash of the asset source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 18
          },
          "name": "sourceHash",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.HostedZoneContextQuery": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Query to hosted zone context provider."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.HostedZoneContextQuery",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context-queries.ts",
        "line": 83
      },
      "name": "HostedZoneContextQuery",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Query account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 87
          },
          "name": "account",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The domain name e.g. example.com to lookup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 97
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Query region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 92
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "True if the zone you want to find is a private hosted zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 104
          },
          "name": "privateZone",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Required if privateZone=true",
            "remarks": "If you provide VPC ID and privateZone is false, this will return no results\nand raise an error.",
            "stability": "stable",
            "summary": "The VPC ID to that the private zone must be associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 114
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.Manifest": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "docs": {
        "stability": "stable",
        "summary": "Protocol utility class."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.Manifest",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/manifest.ts",
        "line": 15
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Load manifest from file."
          },
          "locationInModule": {
            "filename": "lib/manifest.ts",
            "line": 30
          },
          "name": "load",
          "parameters": [
            {
              "docs": {
                "summary": "- path to the manifest file."
              },
              "name": "filePath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cloud-assembly-schema.AssemblyManifest"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Save manifest to file."
          },
          "locationInModule": {
            "filename": "lib/manifest.ts",
            "line": 21
          },
          "name": "save",
          "parameters": [
            {
              "docs": {
                "summary": "- manifest."
              },
              "name": "manifest",
              "type": {
                "fqn": "@aws-cdk/cloud-assembly-schema.AssemblyManifest"
              }
            },
            {
              "name": "filePath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Fetch the current schema version number."
          },
          "locationInModule": {
            "filename": "lib/manifest.ts",
            "line": 40
          },
          "name": "version",
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        }
      ],
      "name": "Manifest"
    },
    "@aws-cdk/cloud-assembly-schema.MetadataEntry": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A metadata entry in a cloud assembly artifact."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.MetadataEntry",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metadata-schema.ts",
        "line": 196
      },
      "name": "MetadataEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of the metadata entry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 200
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no data.",
            "stability": "stable",
            "summary": "The data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 207
          },
          "name": "data",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cloud-assembly-schema.FileAssetMetadataEntry"
                },
                {
                  "fqn": "@aws-cdk/cloud-assembly-schema.ContainerImageAssetMetadataEntry"
                },
                {
                  "collection": {
                    "elementtype": {
                      "fqn": "@aws-cdk/cloud-assembly-schema.Tag"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no trace.",
            "stability": "stable",
            "summary": "A stack trace for when the entry was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 214
          },
          "name": "trace",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.MissingContext": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents a missing piece of context."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.MissingContext",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema.ts",
        "line": 48
      },
      "name": "MissingContext",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The missing context key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 52
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A set of provider-specific options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 62
          },
          "name": "props",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cloud-assembly-schema.AmiContextQuery"
                },
                {
                  "fqn": "@aws-cdk/cloud-assembly-schema.AvailabilityZonesContextQuery"
                },
                {
                  "fqn": "@aws-cdk/cloud-assembly-schema.HostedZoneContextQuery"
                },
                {
                  "fqn": "@aws-cdk/cloud-assembly-schema.SSMParameterContextQuery"
                },
                {
                  "fqn": "@aws-cdk/cloud-assembly-schema.VpcContextQuery"
                },
                {
                  "fqn": "@aws-cdk/cloud-assembly-schema.EndpointServiceAvailabilityZonesContextQuery"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The provider from which we expect this context key to be obtained."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 57
          },
          "name": "provider",
          "type": {
            "fqn": "@aws-cdk/cloud-assembly-schema.ContextProvider"
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.NestedCloudAssemblyProperties": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Artifact properties for nested cloud assemblies."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.NestedCloudAssemblyProperties",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/artifact-schema.ts",
        "line": 90
      },
      "name": "NestedCloudAssemblyProperties",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Relative path to the nested cloud assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact-schema.ts",
            "line": 94
          },
          "name": "directoryName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The artifact ID",
            "stability": "stable",
            "summary": "Display name for the cloud assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact-schema.ts",
            "line": 101
          },
          "name": "displayName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.RuntimeInfo": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Information about the application's runtime components."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.RuntimeInfo",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema.ts",
        "line": 38
      },
      "name": "RuntimeInfo",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The list of libraries loaded in the application, associated with their versions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 42
          },
          "name": "libraries",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.SSMParameterContextQuery": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Query to SSM Parameter Context Provider."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.SSMParameterContextQuery",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context-queries.ts",
        "line": 120
      },
      "name": "SSMParameterContextQuery",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Query account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 124
          },
          "name": "account",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Parameter name to query."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 134
          },
          "name": "parameterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Query region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 129
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.Tag": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Metadata Entry spec for stack tag."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.Tag",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metadata-schema.ts",
        "line": 54
      },
      "name": "Tag",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Tag key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 58
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Tag value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata-schema.ts",
            "line": 63
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.TreeArtifactProperties": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Artifact properties for the Construct Tree Artifact."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.TreeArtifactProperties",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/artifact-schema.ts",
        "line": 80
      },
      "name": "TreeArtifactProperties",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Filename of the tree artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact-schema.ts",
            "line": 84
          },
          "name": "file",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cloud-assembly-schema.VpcContextQuery": {
      "assembly": "@aws-cdk/cloud-assembly-schema",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Query input for looking up a VPC."
      },
      "fqn": "@aws-cdk/cloud-assembly-schema.VpcContextQuery",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context-queries.ts",
        "line": 140
      },
      "name": "VpcContextQuery",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Query account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 144
          },
          "name": "account",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Filter parameters are the same as passed to DescribeVpcs.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html",
            "stability": "stable",
            "summary": "Filters to apply to the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 158
          },
          "name": "filter",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Query region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 149
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to populate the subnetGroups field of the {@link VpcContextResponse}, which contains potentially asymmetric subnet groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 166
          },
          "name": "returnAsymmetricSubnets",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'aws-cdk:subnet-name'",
            "remarks": "If not provided, we'll look at the aws-cdk:subnet-name tag.\nIf the subnet does not have the specified tag,\nwe'll use its type as the name.",
            "stability": "stable",
            "summary": "Optional tag for subnet group name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context-queries.ts",
            "line": 176
          },
          "name": "subnetGroupNameTag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    }
  },
  "version": "1.45.0",
  "fingerprint": "pGOZEDZwf0dAdS2dmsMwabso3axDcDXd/kUghXptyrs="
}
