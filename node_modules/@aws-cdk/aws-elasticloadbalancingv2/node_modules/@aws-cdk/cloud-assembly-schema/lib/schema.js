"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Type of cloud artifact.
 */
var ArtifactType;
(function (ArtifactType) {
    /**
     * Stub required because of JSII.
     */
    ArtifactType["NONE"] = "none";
    /**
     * The artifact is an AWS CloudFormation stack.
     */
    ArtifactType["AWS_CLOUDFORMATION_STACK"] = "aws:cloudformation:stack";
    /**
     * The artifact contains the CDK application's construct tree.
     */
    ArtifactType["CDK_TREE"] = "cdk:tree";
    /**
     * Manifest for all assets in the Cloud Assembly
     */
    ArtifactType["ASSET_MANIFEST"] = "cdk:asset-manifest";
    /**
     * Nested Cloud Assembly
     */
    ArtifactType["NESTED_CLOUD_ASSEMBLY"] = "cdk:cloud-assembly";
})(ArtifactType = exports.ArtifactType || (exports.ArtifactType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZW1hLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2NoZW1hLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBSUE7O0dBRUc7QUFDSCxJQUFZLFlBeUJYO0FBekJELFdBQVksWUFBWTtJQUN0Qjs7T0FFRztJQUNILDZCQUFhLENBQUE7SUFFYjs7T0FFRztJQUNILHFFQUFxRCxDQUFBO0lBRXJEOztPQUVHO0lBQ0gscUNBQXFCLENBQUE7SUFFckI7O09BRUc7SUFDSCxxREFBcUMsQ0FBQTtJQUVyQzs7T0FFRztJQUNILDREQUE0QyxDQUFBO0FBQzlDLENBQUMsRUF6QlcsWUFBWSxHQUFaLG9CQUFZLEtBQVosb0JBQVksUUF5QnZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXJ0aWZhY3RQcm9wZXJ0aWVzIH0gZnJvbSAnLi9hcnRpZmFjdC1zY2hlbWEnO1xuaW1wb3J0IHsgQ29udGV4dFByb3ZpZGVyLCBDb250ZXh0UXVlcnlQcm9wZXJ0aWVzIH0gZnJvbSAnLi9jb250ZXh0LXF1ZXJpZXMnO1xuaW1wb3J0IHsgTWV0YWRhdGFFbnRyeSB9IGZyb20gJy4vbWV0YWRhdGEtc2NoZW1hJztcblxuLyoqXG4gKiBUeXBlIG9mIGNsb3VkIGFydGlmYWN0LlxuICovXG5leHBvcnQgZW51bSBBcnRpZmFjdFR5cGUge1xuICAvKipcbiAgICogU3R1YiByZXF1aXJlZCBiZWNhdXNlIG9mIEpTSUkuXG4gICAqL1xuICBOT05FID0gJ25vbmUnLCAvLyByZXF1aXJlZCBkdWUgdG8gYSBqc2lpIGJ1Z1xuXG4gIC8qKlxuICAgKiBUaGUgYXJ0aWZhY3QgaXMgYW4gQVdTIENsb3VkRm9ybWF0aW9uIHN0YWNrLlxuICAgKi9cbiAgQVdTX0NMT1VERk9STUFUSU9OX1NUQUNLID0gJ2F3czpjbG91ZGZvcm1hdGlvbjpzdGFjaycsXG5cbiAgLyoqXG4gICAqIFRoZSBhcnRpZmFjdCBjb250YWlucyB0aGUgQ0RLIGFwcGxpY2F0aW9uJ3MgY29uc3RydWN0IHRyZWUuXG4gICAqL1xuICBDREtfVFJFRSA9ICdjZGs6dHJlZScsXG5cbiAgLyoqXG4gICAqIE1hbmlmZXN0IGZvciBhbGwgYXNzZXRzIGluIHRoZSBDbG91ZCBBc3NlbWJseVxuICAgKi9cbiAgQVNTRVRfTUFOSUZFU1QgPSAnY2RrOmFzc2V0LW1hbmlmZXN0JyxcblxuICAvKipcbiAgICogTmVzdGVkIENsb3VkIEFzc2VtYmx5XG4gICAqL1xuICBORVNURURfQ0xPVURfQVNTRU1CTFkgPSAnY2RrOmNsb3VkLWFzc2VtYmx5Jyxcbn1cblxuLyoqXG4gKiBJbmZvcm1hdGlvbiBhYm91dCB0aGUgYXBwbGljYXRpb24ncyBydW50aW1lIGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUnVudGltZUluZm8ge1xuICAvKipcbiAgICogVGhlIGxpc3Qgb2YgbGlicmFyaWVzIGxvYWRlZCBpbiB0aGUgYXBwbGljYXRpb24sIGFzc29jaWF0ZWQgd2l0aCB0aGVpciB2ZXJzaW9ucy5cbiAgICovXG4gIHJlYWRvbmx5IGxpYnJhcmllczogeyBbbmFtZTogc3RyaW5nXTogc3RyaW5nIH07XG59XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIG1pc3NpbmcgcGllY2Ugb2YgY29udGV4dC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBNaXNzaW5nQ29udGV4dCB7XG4gIC8qKlxuICAgKiBUaGUgbWlzc2luZyBjb250ZXh0IGtleS5cbiAgICovXG4gIHJlYWRvbmx5IGtleTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgcHJvdmlkZXIgZnJvbSB3aGljaCB3ZSBleHBlY3QgdGhpcyBjb250ZXh0IGtleSB0byBiZSBvYnRhaW5lZC5cbiAgICovXG4gIHJlYWRvbmx5IHByb3ZpZGVyOiBDb250ZXh0UHJvdmlkZXI7XG5cbiAgLyoqXG4gICAqIEEgc2V0IG9mIHByb3ZpZGVyLXNwZWNpZmljIG9wdGlvbnMuXG4gICAqL1xuICByZWFkb25seSBwcm9wczogQ29udGV4dFF1ZXJ5UHJvcGVydGllcztcbn1cblxuLyoqXG4gKiBBIG1hbmlmZXN0IGZvciBhIHNpbmdsZSBhcnRpZmFjdCB3aXRoaW4gdGhlIGNsb3VkIGFzc2VtYmx5LlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEFydGlmYWN0TWFuaWZlc3Qge1xuICAvKipcbiAgICogVGhlIHR5cGUgb2YgYXJ0aWZhY3QuXG4gICAqL1xuICByZWFkb25seSB0eXBlOiBBcnRpZmFjdFR5cGU7XG5cbiAgLyoqXG4gICAqIFRoZSBlbnZpcm9ubWVudCBpbnRvIHdoaWNoIHRoaXMgYXJ0aWZhY3QgaXMgZGVwbG95ZWQuXG4gICAqXG4gICAqIEBkZWZhdWx0IC0gbm8gZW52cmlvbm1lbnQuXG4gICAqL1xuICByZWFkb25seSBlbnZpcm9ubWVudD86IHN0cmluZzsgLy8gZm9ybWF0OiBhd3M6Ly9hY2NvdW50L3JlZ2lvblxuXG4gIC8qKlxuICAgKiBBc3NvY2lhdGVkIG1ldGFkYXRhLlxuICAgKlxuICAgKiBAZGVmYXVsdCAtIG5vIG1ldGFkYXRhLlxuICAgKi9cbiAgcmVhZG9ubHkgbWV0YWRhdGE/OiB7IFtwYXRoOiBzdHJpbmddOiBNZXRhZGF0YUVudHJ5W10gfTtcblxuICAvKipcbiAgICogSURzIG9mIGFydGlmYWN0cyB0aGF0IG11c3QgYmUgZGVwbG95ZWQgYmVmb3JlIHRoaXMgYXJ0aWZhY3QuXG4gICAqXG4gICAqIEBkZWZhdWx0IC0gbm8gZGVwZW5kZW5jaWVzLlxuICAgKi9cbiAgcmVhZG9ubHkgZGVwZW5kZW5jaWVzPzogc3RyaW5nW107XG5cbiAgLyoqXG4gICAqIFRoZSBzZXQgb2YgcHJvcGVydGllcyBmb3IgdGhpcyBhcnRpZmFjdCAoZGVwZW5kcyBvbiB0eXBlKVxuICAgKlxuICAgKiBAZGVmYXVsdCAtIG5vIHByb3BlcnRpZXMuXG4gICAqL1xuICByZWFkb25seSBwcm9wZXJ0aWVzPzogQXJ0aWZhY3RQcm9wZXJ0aWVzO1xufVxuXG4vKipcbiAqIEEgbWFuaWZlc3Qgd2hpY2ggZGVzY3JpYmVzIHRoZSBjbG91ZCBhc3NlbWJseS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBBc3NlbWJseU1hbmlmZXN0IHtcbiAgLyoqXG4gICAqIFByb3RvY29sIHZlcnNpb25cbiAgICovXG4gIHJlYWRvbmx5IHZlcnNpb246IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHNldCBvZiBhcnRpZmFjdHMgaW4gdGhpcyBhc3NlbWJseS5cbiAgICpcbiAgICogQGRlZmF1bHQgLSBubyBhcnRpZmFjdHMuXG4gICAqL1xuICByZWFkb25seSBhcnRpZmFjdHM/OiB7IFtpZDogc3RyaW5nXTogQXJ0aWZhY3RNYW5pZmVzdCB9O1xuXG4gIC8qKlxuICAgKiBNaXNzaW5nIGNvbnRleHQgaW5mb3JtYXRpb24uIElmIHRoaXMgZmllbGQgaGFzIHZhbHVlcywgaXQgbWVhbnMgdGhhdCB0aGVcbiAgICogY2xvdWQgYXNzZW1ibHkgaXMgbm90IGNvbXBsZXRlIGFuZCBzaG91bGQgbm90IGJlIGRlcGxveWVkLlxuICAgKlxuICAgKiBAZGVmYXVsdCAtIG5vIG1pc3NpbmcgY29udGV4dC5cbiAgICovXG4gIHJlYWRvbmx5IG1pc3Npbmc/OiBNaXNzaW5nQ29udGV4dFtdO1xuXG4gIC8qKlxuICAgKiBSdW50aW1lIGluZm9ybWF0aW9uLlxuICAgKlxuICAgKiBAZGVmYXVsdCAtIG5vIGluZm8uXG4gICAqL1xuICByZWFkb25seSBydW50aW1lPzogUnVudGltZUluZm87XG59XG4iXX0=