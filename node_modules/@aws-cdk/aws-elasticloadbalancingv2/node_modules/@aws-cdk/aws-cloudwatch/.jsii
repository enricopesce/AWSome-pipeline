{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-iam": "1.45.0",
    "@aws-cdk/core": "1.45.0",
    "constructs": "^3.0.2"
  },
  "dependencyClosure": {
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/cdk-assets-schema": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CdkAssets.Schema",
          "packageId": "Amazon.CDK.CdkAssets.Schema",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdkassets.schema"
        },
        "js": {
          "npm": "@aws-cdk/cdk-assets-schema"
        },
        "python": {
          "distName": "aws-cdk.cdk-assets-schema",
          "module": "aws_cdk.cdk_assets_schema"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "CDK Constructs for AWS CloudWatch",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.6.0 (build 248e75b)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "cloudwatch"
  ],
  "license": "Apache-2.0",
  "name": "@aws-cdk/aws-cloudwatch",
  "readme": {
    "markdown": "## Amazon CloudWatch Construct Library\n<!--BEGIN STABILITY BANNER-->\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n<!--END STABILITY BANNER-->\n\n## Metric objects\n\nMetric objects represent a metric that is emitted by AWS services or your own\napplication, such as `CPUUsage`, `FailureCount` or `Bandwidth`.\n\nMetric objects can be constructed directly or are exposed by resources as\nattributes. Resources that expose metrics will have functions that look\nlike `metricXxx()` which will return a Metric object, initialized with defaults\nthat make sense.\n\nFor example, `lambda.Function` objects have the `fn.metricErrors()` method, which\nrepresents the amount of errors reported by that Lambda function:\n\n```ts\nconst errors = fn.metricErrors();\n```\n\nYou can also instantiate `Metric` objects to reference any\n[published metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)\nthat's not exposed using a convenience method on the CDK construct.\nFor example:\n\n```ts\nconst hostedZone = new route53.HostedZone(this, 'MyHostedZone', { zoneName: \"example.org\" });\nconst metric = new Metric({\n  namespace: 'AWS/Route53',\n  metricName: 'DNSQueries',\n  dimensions: {\n    HostedZoneId: hostedZone.hostedZoneId\n  }\n})\n```\n\n### Instantiating a new Metric object\n\nIf you want to reference a metric that is not yet exposed by an existing construct,\nyou can instantiate a `Metric` object to represent it. For example:\n\n```ts\nconst metric = new Metric({\n  namespace: 'MyNamespace',\n  metricName: 'MyMetric',\n  dimensions: {\n    ProcessingStep: 'Download'\n  }\n});\n```\n\n### Metric Math\n\nMath expressions are supported by instantiating the `MathExpression` class.\nFor example, a math expression that sums two other metrics looks like this:\n\n```ts\nconst allProblems = new MathExpression({\n  expression: \"errors + faults\",\n  usingMetrics: {\n    errors: myConstruct.metricErrors(),\n    faults: myConstruct.metricFaults(),\n  }\n})\n```\n\nYou can use `MathExpression` objects like any other metric, including using\nthem in other math expressions:\n\n```ts\nconst problemPercentage = new MathExpression({\n  expression: \"(problems / invocations) * 100\",\n  usingMetrics: {\n    problems: allProblems,\n    invocations: myConstruct.metricInvocations()\n  }\n})\n```\n\n### Aggregation\n\nTo graph or alarm on metrics you must aggregate them first, using a function\nlike `Average` or a percentile function like `P99`. By default, most Metric objects\nreturned by CDK libraries will be configured as `Average` over `300 seconds` (5 minutes).\nThe exception is if the metric represents a count of discrete events, such as\nfailures. In that case, the Metric object will be configured as `Sum` over `300\nseconds`, i.e. it represents the number of times that event occurred over the\ntime period.\n\nIf you want to change the default aggregation of the Metric object (for example,\nthe function or the period), you can do so by passing additional parameters\nto the metric function call:\n\n```ts\nconst minuteErrorRate = fn.metricErrors({\n  statistic: 'avg',\n  period: Duration.minutes(1),\n  label: 'Lambda failure rate'\n});\n```\n\nThis function also allows changing the metric label or color (which will be\nuseful when embedding them in graphs, see below).\n\n> Rates versus Sums\n>\n> The reason for using `Sum` to count discrete events is that *some* events are\n> emitted as either `0` or `1` (for example `Errors` for a Lambda) and some are\n> only emitted as `1` (for example `NumberOfMessagesPublished` for an SNS\n> topic).\n>\n> In case `0`-metrics are emitted, it makes sense to take the `Average` of this\n> metric: the result will be the fraction of errors over all executions.\n>\n> If `0`-metrics are not emitted, the `Average` will always be equal to `1`,\n> and not be very useful.\n>\n> In order to simplify the mental model of `Metric` objects, we default to\n> aggregating using `Sum`, which will be the same for both metrics types. If you\n> happen to know the Metric you want to alarm on makes sense as a rate\n> (`Average`) you can always choose to change the statistic.\n\n## Alarms\n\nAlarms can be created on metrics in one of two ways. Either create an `Alarm`\nobject, passing the `Metric` object to set the alarm on:\n\n\n```ts\nnew Alarm(this, 'Alarm', {\n  metric: fn.metricErrors(),\n  threshold: 100,\n  evaluationPeriods: 2,\n});\n```\n\nAlternatively, you can call `metric.createAlarm()`:\n\n```ts\nfn.metricErrors().createAlarm(this, 'Alarm', {\n  threshold: 100,\n  evaluationPeriods: 2,\n});\n```\n\nThe most important properties to set while creating an Alarms are:\n\n- `threshold`: the value to compare the metric against.\n- `comparisonOperator`: the comparison operation to use, defaults to `metric >= threshold`.\n- `evaluationPeriods`: how many consecutive periods the metric has to be\n  breaching the the threshold for the alarm to trigger.\n\n### Alarm Actions\n\nTo add actions to an alarm, use the integration classes from the\n`@aws-cdk/aws-cloudwatch-actions` package. For example, to post a message to\nan SNS topic when an alarm breaches, do the following:\n\n```ts\nimport * as cw_actions from '@aws-cdk/aws-cloudwatch-actions';\n\n// ...\nconst topic = new sns.Topic(stack, 'Topic');\nconst alarm = new cloudwatch.Alarm(stack, 'Alarm', { /* ... */ });\n\nalarm.addAlarmAction(new cw_actions.SnsAction(topic));\n```\n\n### A note on units\n\nIn CloudWatch, Metrics datums are emitted with units, such as `seconds` or\n`bytes`. When `Metric` objects are given a `unit` attribute, it will be used to\n*filter* the stream of metric datums for datums emitted using the same `unit`\nattribute.\n\nIn particular, the `unit` field is *not* used to rescale datums or alarm threshold\nvalues (for example, it cannot be used to specify an alarm threshold in\n*Megabytes* if the metric stream is being emitted as *bytes*).\n\nYou almost certainly don't want to specify the `unit` property when creating\n`Metric` objects (which will retrieve all datums regardless of their unit),\nunless you have very specific requirements. Note that in any case, CloudWatch\nonly supports filtering by `unit` for Alarms, not in Dashboard graphs.\n\nPlease see the following GitHub issue for a discussion on real unit\ncalculations in CDK: https://github.com/aws/aws-cdk/issues/5595\n\n## Dashboards\n\nDashboards are set of Widgets stored server-side which can be accessed quickly\nfrom the AWS console. Available widgets are graphs of a metric over time, the\ncurrent value of a metric, or a static piece of Markdown which explains what the\ngraphs mean.\n\nThe following widgets are available:\n\n- `GraphWidget` -- shows any number of metrics on both the left and right\n  vertical axes.\n- `AlarmWidget` -- shows the graph and alarm line for a single alarm.\n- `SingleValueWidget` -- shows the current value of a set of metrics.\n- `TextWidget` -- shows some static Markdown.\n\n### Graph widget\n\nA graph widget can display any number of metrics on either the `left` or\n`right` vertical axis:\n\n```ts\ndashboard.addWidgets(new GraphWidget({\n  title: \"Executions vs error rate\",\n\n  left: [executionCountMetric],\n\n  right: [errorCountMetric.with({\n    statistic: \"average\",\n    label: \"Error rate\",\n    color: Color.GREEN\n  })]\n}));\n```\n\nGraph widgets can also display annotations attached to the left or the right y-axis.\n\n```ts\ndashboard.addWidgets(new GraphWidget({\n  // ...\n  // ...\n\n  leftAnnotations: [\n    { value: 1800, label: Duration.minutes(30).toHumanString(), color: Color.RED, },\n    { value: 3600, label: '1 hour', color: '#2ca02c', }\n  ],\n}));\n```\n\nThe graph legend can be adjusted from the default position at bottom of the widget.\n\n```ts\ndashboard.addWidgets(new GraphWidget({\n  // ...\n  // ...\n\n  legendPosition: LegendPosition.RIGHT,\n}));\n```\n\n### Alarm widget\n\nAn alarm widget shows the graph and the alarm line of a single alarm:\n\n```ts\ndashboard.addWidgets(new AlarmWidget({\n  title: \"Errors\",\n  alarm: errorAlarm,\n}));\n```\n\n### Single value widget\n\nA single-value widget shows the latest value of a set of metrics (as opposed\nto a graph of the value over time):\n\n```ts\ndashboard.addWidgets(new SingleValueWidget({\n  metrics: [visitorCount, purchaseCount],\n}));\n```\n\n### Text widget\n\nA text widget shows an arbitrary piece of MarkDown. Use this to add explanations\nto your dashboard:\n\n```ts\ndashboard.addWidgets(new TextWidget({\n  markdown: '# Key Performance Indicators'\n}));\n```\n\n### Query results widget\n\nA `LogQueryWidget` shows the results of a query from Logs Insights:\n\n```ts\ndashboard.addWidgets(new LogQueryWidget({\n  logGroupNames: ['my-log-group'],\n  // The lines will be automatically combined using '\\n|'.\n  queryLines: [\n    'fields @message',\n    'filter @message like /Error/',\n  ]\n}));\n```\n\n### Dashboard Layout\n\nThe widgets on a dashboard are visually laid out in a grid that is 24 columns\nwide. Normally you specify X and Y coordinates for the widgets on a Dashboard,\nbut because this is inconvenient to do manually, the library contains a simple\nlayout system to help you lay out your dashboards the way you want them to.\n\nWidgets have a `width` and `height` property, and they will be automatically\nlaid out either horizontally or vertically stacked to fill out the available\nspace.\n\nWidgets are added to a Dashboard by calling `add(widget1, widget2, ...)`.\nWidgets given in the same call will be laid out horizontally. Widgets given\nin different calls will be laid out vertically. To make more complex layouts,\nyou can use the following widgets to pack widgets together in different ways:\n\n- `Column`: stack two or more widgets vertically.\n- `Row`: lay out two or more widgets horizontally.\n- `Spacer`: take up empty space\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-cloudwatch",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.CloudWatch",
      "packageId": "Amazon.CDK.AWS.CloudWatch",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "cloudwatch",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.cloudwatch"
    },
    "js": {
      "npm": "@aws-cdk/aws-cloudwatch"
    },
    "python": {
      "distName": "aws-cdk.aws-cloudwatch",
      "module": "aws_cdk.aws_cloudwatch"
    }
  },
  "types": {
    "@aws-cdk/aws-cloudwatch.Alarm": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "An alarm on a CloudWatch metric."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.AlarmProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.IAlarm"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/alarm.ts",
        "line": 110
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing CloudWatch alarm provided an ARN."
          },
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 119
          },
          "name": "fromAlarmArn",
          "parameters": [
            {
              "docs": {
                "summary": "The parent creating construct (usually `this`)."
              },
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's name."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Alarm ARN (i.e. arn:aws:cloudwatch:<region>:<account-id>:alarm:Foo)."
              },
              "name": "alarmArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.IAlarm"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Typically the ARN of an SNS topic or ARN of an AutoScaling policy.",
            "stability": "stable",
            "summary": "Trigger this action if the alarm fires."
          },
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 222
          },
          "name": "addAlarmAction",
          "parameters": [
            {
              "name": "actions",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.IAlarmAction"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Typically the ARN of an SNS topic or ARN of an AutoScaling policy.",
            "stability": "stable",
            "summary": "Trigger this action if there is insufficient data to evaluate the alarm."
          },
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 235
          },
          "name": "addInsufficientDataAction",
          "parameters": [
            {
              "name": "actions",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.IAlarmAction"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Typically the ARN of an SNS topic or ARN of an AutoScaling policy.",
            "stability": "stable",
            "summary": "Trigger this action if the alarm returns from breaching state into ok state."
          },
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 248
          },
          "name": "addOkAction",
          "parameters": [
            {
              "name": "actions",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.IAlarmAction"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "This is useful if you want to represent an Alarm in a non-AlarmWidget.\nAn `AlarmWidget` can directly show an alarm, but it can only show a\nsingle alarm and no other metrics. Instead, you can convert the alarm to\na HorizontalAnnotation and add it as an annotation to another graph.\n\nThis might be useful if:\n\n- You want to show multiple alarms inside a single graph, for example if\n   you have both a \"small margin/long period\" alarm as well as a\n   \"large margin/short period\" alarm.\n\n- You want to show an Alarm line in a graph with multiple metrics in it.",
            "stability": "stable",
            "summary": "Turn this alarm into a horizontal annotation."
          },
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 272
          },
          "name": "toAnnotation",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.HorizontalAnnotation"
            }
          }
        }
      ],
      "name": "Alarm",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ARN of this alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 132
          },
          "name": "alarmArn",
          "overrides": "@aws-cdk/aws-cloudwatch.IAlarm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Name of this alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 139
          },
          "name": "alarmName",
          "overrides": "@aws-cdk/aws-cloudwatch.IAlarm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The metric object this alarm was based on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 144
          },
          "name": "metric",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.AlarmActionConfig": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for an alarm action."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.AlarmActionConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alarm-action.ts",
        "line": 20
      },
      "name": "AlarmActionConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the ARN that should be used for a CloudWatch Alarm action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm-action.ts",
            "line": 24
          },
          "name": "alarmActionArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.AlarmProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for Alarms."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.AlarmProps",
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.CreateAlarmOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alarm.ts",
        "line": 34
      },
      "name": "AlarmProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Metric objects can be obtained from most resources, or you can construct\ncustom Metric objects by instantiating one.",
            "stability": "stable",
            "summary": "The metric to add the alarm on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 41
          },
          "name": "metric",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.AlarmWidget": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
      "docs": {
        "stability": "stable",
        "summary": "Display the metric associated with an alarm, including the alarm line."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.AlarmWidget",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.AlarmWidgetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 94
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 102
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "AlarmWidget"
    },
    "@aws-cdk/aws-cloudwatch.AlarmWidgetProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for an AlarmWidget."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.AlarmWidgetProps",
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.MetricWidgetProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 77
      },
      "name": "AlarmWidgetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The alarm to show."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 81
          },
          "name": "alarm",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IAlarm"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No minimum or maximum values for the left Y-axis",
            "stability": "stable",
            "summary": "Left Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 88
          },
          "name": "leftYAxis",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.YAxisProps"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAlarm": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudWatch::Alarm"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudWatch::Alarm`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudWatch::Alarm`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarmProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 253
      },
      "methods": [
        {
          "docs": {
            "remarks": "Used in the @aws-cdk/cloudformation-include module.",
            "stability": "experimental",
            "summary": "A factory method that creates a new instance of this class from an object containing the CloudFormation properties of this resource."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 266
          },
          "name": "fromCloudFormation",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "resourceAttributes",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/core.FromCloudFormationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 470
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 500
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnAlarm",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 257
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 299
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 475
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-comparisonoperator",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.ComparisonOperator`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 305
          },
          "name": "comparisonOperator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-evaluationperiods",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.EvaluationPeriods`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 311
          },
          "name": "evaluationPeriods",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-actionsenabled",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.ActionsEnabled`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 317
          },
          "name": "actionsEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-alarmactions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.AlarmActions`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 323
          },
          "name": "alarmActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-alarmdescription",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.AlarmDescription`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 329
          },
          "name": "alarmDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-alarmname",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.AlarmName`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 335
          },
          "name": "alarmName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarm-datapointstoalarm",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.DatapointsToAlarm`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 341
          },
          "name": "datapointsToAlarm",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-dimension",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Dimensions`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 347
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.DimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-evaluatelowsamplecountpercentile",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.EvaluateLowSampleCountPercentile`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 353
          },
          "name": "evaluateLowSampleCountPercentile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-extendedstatistic",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.ExtendedStatistic`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 359
          },
          "name": "extendedStatistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-insufficientdataactions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.InsufficientDataActions`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 365
          },
          "name": "insufficientDataActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-metricname",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.MetricName`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 371
          },
          "name": "metricName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarm-metrics",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Metrics`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 377
          },
          "name": "metrics",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricDataQueryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-namespace",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Namespace`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 383
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-okactions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.OKActions`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 389
          },
          "name": "okActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-period",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Period`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 395
          },
          "name": "period",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-statistic",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Statistic`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 401
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-threshold",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Threshold`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 407
          },
          "name": "threshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-dynamic-threshold",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.ThresholdMetricId`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 413
          },
          "name": "thresholdMetricId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-treatmissingdata",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.TreatMissingData`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 419
          },
          "name": "treatMissingData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-unit",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Unit`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 425
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAlarm.DimensionProperty": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-dimension.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.DimensionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 510
      },
      "name": "DimensionProperty",
      "namespace": "CfnAlarm",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-dimension.html#cfn-cloudwatch-alarm-dimension-name",
            "stability": "external",
            "summary": "`CfnAlarm.DimensionProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 515
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-dimension.html#cfn-cloudwatch-alarm-dimension-value",
            "stability": "external",
            "summary": "`CfnAlarm.DimensionProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 520
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricDataQueryProperty": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricDataQueryProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 646
      },
      "name": "MetricDataQueryProperty",
      "namespace": "CfnAlarm",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html#cfn-cloudwatch-alarm-metricdataquery-id",
            "stability": "external",
            "summary": "`CfnAlarm.MetricDataQueryProperty.Id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 656
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html#cfn-cloudwatch-alarm-metricdataquery-expression",
            "stability": "external",
            "summary": "`CfnAlarm.MetricDataQueryProperty.Expression`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 651
          },
          "name": "expression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html#cfn-cloudwatch-alarm-metricdataquery-label",
            "stability": "external",
            "summary": "`CfnAlarm.MetricDataQueryProperty.Label`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 661
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html#cfn-cloudwatch-alarm-metricdataquery-metricstat",
            "stability": "external",
            "summary": "`CfnAlarm.MetricDataQueryProperty.MetricStat`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 666
          },
          "name": "metricStat",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricStatProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "external",
            "summary": "`CfnAlarm.MetricDataQueryProperty.Period`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 675
          },
          "name": "period",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html#cfn-cloudwatch-alarm-metricdataquery-returndata",
            "stability": "external",
            "summary": "`CfnAlarm.MetricDataQueryProperty.ReturnData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 671
          },
          "name": "returnData",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricProperty": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metric.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 575
      },
      "name": "MetricProperty",
      "namespace": "CfnAlarm",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metric.html#cfn-cloudwatch-alarm-metric-dimensions",
            "stability": "external",
            "summary": "`CfnAlarm.MetricProperty.Dimensions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 580
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.DimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metric.html#cfn-cloudwatch-alarm-metric-metricname",
            "stability": "external",
            "summary": "`CfnAlarm.MetricProperty.MetricName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 585
          },
          "name": "metricName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metric.html#cfn-cloudwatch-alarm-metric-namespace",
            "stability": "external",
            "summary": "`CfnAlarm.MetricProperty.Namespace`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 590
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricStatProperty": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricStatProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 741
      },
      "name": "MetricStatProperty",
      "namespace": "CfnAlarm",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html#cfn-cloudwatch-alarm-metricstat-metric",
            "stability": "external",
            "summary": "`CfnAlarm.MetricStatProperty.Metric`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 746
          },
          "name": "metric",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html#cfn-cloudwatch-alarm-metricstat-period",
            "stability": "external",
            "summary": "`CfnAlarm.MetricStatProperty.Period`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 751
          },
          "name": "period",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html#cfn-cloudwatch-alarm-metricstat-stat",
            "stability": "external",
            "summary": "`CfnAlarm.MetricStatProperty.Stat`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 756
          },
          "name": "stat",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html#cfn-cloudwatch-alarm-metricstat-unit",
            "stability": "external",
            "summary": "`CfnAlarm.MetricStatProperty.Unit`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 761
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAlarmProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudWatch::Alarm`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarmProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 17
      },
      "name": "CfnAlarmProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-comparisonoperator",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.ComparisonOperator`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 23
          },
          "name": "comparisonOperator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-evaluationperiods",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.EvaluationPeriods`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 29
          },
          "name": "evaluationPeriods",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-actionsenabled",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.ActionsEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 35
          },
          "name": "actionsEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-alarmactions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.AlarmActions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 41
          },
          "name": "alarmActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-alarmdescription",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.AlarmDescription`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 47
          },
          "name": "alarmDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-alarmname",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.AlarmName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 53
          },
          "name": "alarmName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarm-datapointstoalarm",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.DatapointsToAlarm`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 59
          },
          "name": "datapointsToAlarm",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-dimension",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Dimensions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 65
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.DimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-evaluatelowsamplecountpercentile",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.EvaluateLowSampleCountPercentile`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 71
          },
          "name": "evaluateLowSampleCountPercentile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-extendedstatistic",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.ExtendedStatistic`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 77
          },
          "name": "extendedStatistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-insufficientdataactions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.InsufficientDataActions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 83
          },
          "name": "insufficientDataActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-metricname",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.MetricName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 89
          },
          "name": "metricName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarm-metrics",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Metrics`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 95
          },
          "name": "metrics",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricDataQueryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-namespace",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Namespace`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 101
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-okactions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.OKActions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 107
          },
          "name": "okActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-period",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Period`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 113
          },
          "name": "period",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-statistic",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Statistic`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 119
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-threshold",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Threshold`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 125
          },
          "name": "threshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-dynamic-threshold",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.ThresholdMetricId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 131
          },
          "name": "thresholdMetricId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-treatmissingdata",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.TreatMissingData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 137
          },
          "name": "treatMissingData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-unit",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Alarm.Unit`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 143
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudWatch::AnomalyDetector"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudWatch::AnomalyDetector`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudWatch::AnomalyDetector`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.CfnAnomalyDetectorProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 917
      },
      "methods": [
        {
          "docs": {
            "remarks": "Used in the @aws-cdk/cloudformation-include module.",
            "stability": "experimental",
            "summary": "A factory method that creates a new instance of this class from an object containing the CloudFormation properties of this resource."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 930
          },
          "name": "fromCloudFormation",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "resourceAttributes",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/core.FromCloudFormationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1017
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1031
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnAnomalyDetector",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 921
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1022
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-metricname",
            "stability": "external",
            "summary": "`AWS::CloudWatch::AnomalyDetector.MetricName`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 964
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-namespace",
            "stability": "external",
            "summary": "`AWS::CloudWatch::AnomalyDetector.Namespace`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 970
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-stat",
            "stability": "external",
            "summary": "`AWS::CloudWatch::AnomalyDetector.Stat`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 976
          },
          "name": "stat",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-configuration",
            "stability": "external",
            "summary": "`AWS::CloudWatch::AnomalyDetector.Configuration`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 982
          },
          "name": "configuration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector.ConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-dimensions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::AnomalyDetector.Dimensions`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 988
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector.DimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector.ConfigurationProperty": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-anomalydetector-configuration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector.ConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 1041
      },
      "name": "ConfigurationProperty",
      "namespace": "CfnAnomalyDetector",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-anomalydetector-configuration.html#cfn-cloudwatch-anomalydetector-configuration-excludedtimeranges",
            "stability": "external",
            "summary": "`CfnAnomalyDetector.ConfigurationProperty.ExcludedTimeRanges`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1046
          },
          "name": "excludedTimeRanges",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector.RangeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-anomalydetector-configuration.html#cfn-cloudwatch-anomalydetector-configuration-metrictimezone",
            "stability": "external",
            "summary": "`CfnAnomalyDetector.ConfigurationProperty.MetricTimeZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1051
          },
          "name": "metricTimeZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector.DimensionProperty": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-anomalydetector-dimension.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector.DimensionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 1104
      },
      "name": "DimensionProperty",
      "namespace": "CfnAnomalyDetector",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-anomalydetector-dimension.html#cfn-cloudwatch-anomalydetector-dimension-name",
            "stability": "external",
            "summary": "`CfnAnomalyDetector.DimensionProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1109
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-anomalydetector-dimension.html#cfn-cloudwatch-anomalydetector-dimension-value",
            "stability": "external",
            "summary": "`CfnAnomalyDetector.DimensionProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1114
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector.RangeProperty": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-anomalydetector-range.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector.RangeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 1169
      },
      "name": "RangeProperty",
      "namespace": "CfnAnomalyDetector",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-anomalydetector-range.html#cfn-cloudwatch-anomalydetector-range-endtime",
            "stability": "external",
            "summary": "`CfnAnomalyDetector.RangeProperty.EndTime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1174
          },
          "name": "endTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-anomalydetector-range.html#cfn-cloudwatch-anomalydetector-range-starttime",
            "stability": "external",
            "summary": "`CfnAnomalyDetector.RangeProperty.StartTime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1179
          },
          "name": "startTime",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAnomalyDetectorProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudWatch::AnomalyDetector`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAnomalyDetectorProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 824
      },
      "name": "CfnAnomalyDetectorProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-metricname",
            "stability": "external",
            "summary": "`AWS::CloudWatch::AnomalyDetector.MetricName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 830
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-namespace",
            "stability": "external",
            "summary": "`AWS::CloudWatch::AnomalyDetector.Namespace`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 836
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-stat",
            "stability": "external",
            "summary": "`AWS::CloudWatch::AnomalyDetector.Stat`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 842
          },
          "name": "stat",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-configuration",
            "stability": "external",
            "summary": "`AWS::CloudWatch::AnomalyDetector.Configuration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 848
          },
          "name": "configuration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector.ConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-dimensions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::AnomalyDetector.Dimensions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 854
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudwatch.CfnAnomalyDetector.DimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnCompositeAlarm": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudWatch::CompositeAlarm"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudWatch::CompositeAlarm`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnCompositeAlarm",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudWatch::CompositeAlarm`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.CfnCompositeAlarmProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 1345
      },
      "methods": [
        {
          "docs": {
            "remarks": "Used in the @aws-cdk/cloudformation-include module.",
            "stability": "experimental",
            "summary": "A factory method that creates a new instance of this class from an object containing the CloudFormation properties of this resource."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1358
          },
          "name": "fromCloudFormation",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "resourceAttributes",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/core.FromCloudFormationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.CfnCompositeAlarm"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1464
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1480
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCompositeAlarm",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1349
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1391
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1469
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmname",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.AlarmName`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1397
          },
          "name": "alarmName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmrule",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.AlarmRule`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1403
          },
          "name": "alarmRule",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionsenabled",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.ActionsEnabled`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1409
          },
          "name": "actionsEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmactions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.AlarmActions`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1415
          },
          "name": "alarmActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmdescription",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.AlarmDescription`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1421
          },
          "name": "alarmDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-insufficientdataactions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.InsufficientDataActions`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1427
          },
          "name": "insufficientDataActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-okactions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.OKActions`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1433
          },
          "name": "okActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnCompositeAlarmProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudWatch::CompositeAlarm`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnCompositeAlarmProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 1235
      },
      "name": "CfnCompositeAlarmProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmname",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.AlarmName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1241
          },
          "name": "alarmName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmrule",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.AlarmRule`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1247
          },
          "name": "alarmRule",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionsenabled",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.ActionsEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1253
          },
          "name": "actionsEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmactions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.AlarmActions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1259
          },
          "name": "alarmActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmdescription",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.AlarmDescription`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1265
          },
          "name": "alarmDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-insufficientdataactions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.InsufficientDataActions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1271
          },
          "name": "insufficientDataActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-okactions",
            "stability": "external",
            "summary": "`AWS::CloudWatch::CompositeAlarm.OKActions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1277
          },
          "name": "okActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnDashboard": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudWatch::Dashboard"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudWatch::Dashboard`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnDashboard",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudWatch::Dashboard`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.CfnDashboardProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 1555
      },
      "methods": [
        {
          "docs": {
            "remarks": "Used in the @aws-cdk/cloudformation-include module.",
            "stability": "experimental",
            "summary": "A factory method that creates a new instance of this class from an object containing the CloudFormation properties of this resource."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1568
          },
          "name": "fromCloudFormation",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "resourceAttributes",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/core.FromCloudFormationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.CfnDashboard"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1632
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1643
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDashboard",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1559
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1637
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html#cfn-cloudwatch-dashboard-dashboardbody",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Dashboard.DashboardBody`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1602
          },
          "name": "dashboardBody",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html#cfn-cloudwatch-dashboard-dashboardname",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Dashboard.DashboardName`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1608
          },
          "name": "dashboardName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnDashboardProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudWatch::Dashboard`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnDashboardProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 1491
      },
      "name": "CfnDashboardProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html#cfn-cloudwatch-dashboard-dashboardbody",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Dashboard.DashboardBody`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1497
          },
          "name": "dashboardBody",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html#cfn-cloudwatch-dashboard-dashboardname",
            "stability": "external",
            "summary": "`AWS::CloudWatch::Dashboard.DashboardName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1503
          },
          "name": "dashboardName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnInsightRule": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudWatch::InsightRule"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudWatch::InsightRule`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnInsightRule",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudWatch::InsightRule`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.CfnInsightRuleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 1738
      },
      "methods": [
        {
          "docs": {
            "remarks": "Used in the @aws-cdk/cloudformation-include module.",
            "stability": "experimental",
            "summary": "A factory method that creates a new instance of this class from an object containing the CloudFormation properties of this resource."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1751
          },
          "name": "fromCloudFormation",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "resourceAttributes",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/core.FromCloudFormationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.CfnInsightRule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1843
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1856
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnInsightRule",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1742
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1784
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "RuleName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1789
          },
          "name": "attrRuleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1848
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-tags",
            "stability": "external",
            "summary": "`AWS::CloudWatch::InsightRule.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1813
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-rulebody",
            "stability": "external",
            "summary": "`AWS::CloudWatch::InsightRule.RuleBody`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1795
          },
          "name": "ruleBody",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-rulename",
            "stability": "external",
            "summary": "`AWS::CloudWatch::InsightRule.RuleName`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1801
          },
          "name": "ruleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-rulestate",
            "stability": "external",
            "summary": "`AWS::CloudWatch::InsightRule.RuleState`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1807
          },
          "name": "ruleState",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnInsightRuleProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudWatch::InsightRule`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnInsightRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 1654
      },
      "name": "CfnInsightRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-rulebody",
            "stability": "external",
            "summary": "`AWS::CloudWatch::InsightRule.RuleBody`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1660
          },
          "name": "ruleBody",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-rulename",
            "stability": "external",
            "summary": "`AWS::CloudWatch::InsightRule.RuleName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1666
          },
          "name": "ruleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-rulestate",
            "stability": "external",
            "summary": "`AWS::CloudWatch::InsightRule.RuleState`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1672
          },
          "name": "ruleState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-tags",
            "stability": "external",
            "summary": "`AWS::CloudWatch::InsightRule.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 1678
          },
          "name": "tags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/core.CfnTag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Color": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "stable",
        "summary": "A set of standard colours that can be used in annotations in a GraphWidget."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Color",
      "initializer": {},
      "kind": "class",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 334
      },
      "name": "Color",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "blue - hex #1f77b4."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 336
          },
          "name": "BLUE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "brown - hex #8c564b."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 339
          },
          "name": "BROWN",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "green - hex #2ca02c."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 342
          },
          "name": "GREEN",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "grey - hex #7f7f7f."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 345
          },
          "name": "GREY",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "orange - hex #ff7f0e."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 348
          },
          "name": "ORANGE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "pink - hex #e377c2."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 351
          },
          "name": "PINK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "purple - hex #9467bd."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 354
          },
          "name": "PURPLE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "red - hex #d62728."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 357
          },
          "name": "RED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Column": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "remarks": "Widgets will be laid out next to each other",
        "stability": "stable",
        "summary": "A widget that contains other widgets in a vertical column."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Column",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "widgets",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.IWidget"
            },
            "variadic": true
          }
        ],
        "variadic": true
      },
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.IWidget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/layout.ts",
        "line": 66
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Place the widget at a given position."
          },
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 83
          },
          "name": "position",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "y",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 91
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Column",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The amount of vertical grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 68
          },
          "name": "height",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The amount of horizontal grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 67
          },
          "name": "width",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CommonMetricOptions": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options shared by most methods accepting metric options."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CommonMetricOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric.ts",
        "line": 13
      },
      "name": "CommonMetricOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Deployment account.",
            "stability": "stable",
            "summary": "Account which this metric comes from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 78
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatic color",
            "stability": "stable",
            "summary": "The hex color code, prefixed with '#' (e.g. '#00ff00'), to use when this metric is rendered on a graph. The `Color` class has a set of standard colors that can be used here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 71
          },
          "name": "color",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No dimensions.",
            "stability": "stable",
            "summary": "Dimensions of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 42
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No label",
            "stability": "stable",
            "summary": "Label for this metric when added to a Graph in a Dashboard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 64
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "stability": "stable",
            "summary": "The period over which the specified statistic is applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 19
          },
          "name": "period",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Deployment region.",
            "stability": "stable",
            "summary": "Region which this metric comes from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 85
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Average",
            "remarks": "Can be one of the following:\n\n- \"Minimum\" | \"min\"\n- \"Maximum\" | \"max\"\n- \"Average\" | \"avg\"\n- \"Sum\" | \"sum\"\n- \"SampleCount | \"n\"\n- \"pNN.NN\"",
            "stability": "stable",
            "summary": "What function to use for aggregating."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 35
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All metric datums in the given metric stream",
            "remarks": "Only refer to datums emitted to the metric stream with the given unit and\nignore all others. Only useful when datums are being emitted to the same\nmetric stream under different units.\n\nThe default is to use all matric datums in the stream, regardless of unit,\nwhich is recommended in nearly all cases.\n\nCloudWatch does not honor this property for graphs.",
            "stability": "stable",
            "summary": "Unit used to filter the metric stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 58
          },
          "name": "unit",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Unit"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.ComparisonOperator": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "stable",
        "summary": "Comparison operator for evaluating alarms."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.ComparisonOperator",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/alarm.ts",
        "line": 47
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Specified statistic is greater than or equal to the threshold."
          },
          "name": "GREATER_THAN_OR_EQUAL_TO_THRESHOLD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Specified statistic is strictly greater than the threshold."
          },
          "name": "GREATER_THAN_THRESHOLD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Specified statistic is strictly less than the threshold."
          },
          "name": "LESS_THAN_THRESHOLD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Specified statistic is less than or equal to the threshold."
          },
          "name": "LESS_THAN_OR_EQUAL_TO_THRESHOLD"
        },
        {
          "docs": {
            "remarks": "Used only for alarms based on anomaly detection models",
            "stability": "stable",
            "summary": "Specified statistic is lower than or greater than the anomaly model band."
          },
          "name": "LESS_THAN_LOWER_OR_GREATER_THAN_UPPER_THRESHOLD"
        }
      ],
      "name": "ComparisonOperator"
    },
    "@aws-cdk/aws-cloudwatch.ConcreteWidget": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "remarks": "This is in contrast to other widgets which exist for layout purposes.",
        "stability": "stable",
        "summary": "A real CloudWatch widget that has its own fixed size and remembers its position."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "width",
            "type": {
              "primitive": "number"
            }
          },
          {
            "name": "height",
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.IWidget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/widget.ts",
        "line": 36
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Place the widget at a given position."
          },
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 51
          },
          "name": "position",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "y",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 56
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "ConcreteWidget",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The amount of vertical grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 38
          },
          "name": "height",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The amount of horizontal grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 37
          },
          "name": "width",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 39
          },
          "name": "x",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 40
          },
          "name": "y",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CreateAlarmOptions": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties needed to make an alarm from a metric."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CreateAlarmOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric.ts",
        "line": 560
      },
      "name": "CreateAlarmOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of periods over which data is compared to the specified threshold."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 619
          },
          "name": "evaluationPeriods",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The value against which the specified statistic is compared."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 614
          },
          "name": "threshold",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether the actions for this alarm are enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 642
          },
          "name": "actionsEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No description",
            "stability": "stable",
            "summary": "Description for the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 602
          },
          "name": "alarmDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated name",
            "stability": "stable",
            "summary": "Name of the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 595
          },
          "name": "alarmName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "GreaterThanOrEqualToThreshold",
            "stability": "stable",
            "summary": "Comparison to use to check if metric is breaching."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 609
          },
          "name": "comparisonOperator",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.ComparisonOperator"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "``evaluationPeriods``",
            "remarks": "This is used only if you are setting an \"M\nout of N\" alarm. In that case, this value is the M. For more information, see Evaluating an Alarm in the Amazon\nCloudWatch User Guide.",
            "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation",
            "stability": "stable",
            "summary": "The number of datapoints that must be breaching to trigger the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 653
          },
          "name": "datapointsToAlarm",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not configured.",
            "remarks": "Used only for alarms that are based on percentiles.",
            "stability": "stable",
            "summary": "Specifies whether to evaluate the data and potentially change the alarm state if there are too few data points to be statistically significant."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 628
          },
          "name": "evaluateLowSampleCountPercentile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The period from the metric",
            "deprecated": "Use `metric.with({ period: ... })` to encode the period into the Metric object",
            "remarks": "Cannot be used with `MathExpression` objects.",
            "stability": "deprecated",
            "summary": "The period over which the specified statistic is applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 569
          },
          "name": "period",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The statistic from the metric",
            "deprecated": "Use `metric.with({ statistic: ... })` to encode the period into the Metric object",
            "remarks": "Can be one of the following:\n\n- \"Minimum\" | \"min\"\n- \"Maximum\" | \"max\"\n- \"Average\" | \"avg\"\n- \"Sum\" | \"sum\"\n- \"SampleCount | \"n\"\n- \"pNN.NN\"\n\nCannot be used with `MathExpression` objects.",
            "stability": "deprecated",
            "summary": "What function to use for aggregating."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 588
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "TreatMissingData.Missing",
            "stability": "stable",
            "summary": "Sets how this alarm is to handle missing data points."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 635
          },
          "name": "treatMissingData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.TreatMissingData"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Dashboard": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A CloudWatch dashboard."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Dashboard",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.DashboardProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/dashboard.ts",
        "line": 76
      },
      "methods": [
        {
          "docs": {
            "remarks": "Widgets given in multiple calls to add() will be laid out stacked on\ntop of each other.\n\nMultiple widgets added in the same call to add() will be laid out next\nto each other.",
            "stability": "stable",
            "summary": "Add a widget to the dashboard."
          },
          "locationInModule": {
            "filename": "lib/dashboard.ts",
            "line": 122
          },
          "name": "addWidgets",
          "parameters": [
            {
              "name": "widgets",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.IWidget"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "Dashboard"
    },
    "@aws-cdk/aws-cloudwatch.DashboardProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for defining a CloudWatch Dashboard."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.DashboardProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/dashboard.ts",
        "line": 23
      },
      "name": "DashboardProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- automatically generated name",
            "remarks": "If set, must only contain alphanumerics, dash (-) and underscore (_)",
            "stability": "stable",
            "summary": "Name of the dashboard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dashboard.ts",
            "line": 31
          },
          "name": "dashboardName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "When the dashboard loads, the end date will be the current time.",
            "remarks": "If you specify a value for end, you must also specify a value for start.\nSpecify an absolute time in the ISO 8601 format. For example, 2018-12-17T06:00:00.000Z.",
            "stability": "stable",
            "summary": "The end of the time range to use for each widget on the dashboard when the dashboard loads."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dashboard.ts",
            "line": 52
          },
          "name": "end",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Auto",
            "remarks": "Specifying `Auto` causes the period of all graphs on the dashboard to automatically adapt to the time range of the dashboard.\nSpecifying `Inherit` ensures that the period set for each graph is always obeyed.",
            "stability": "stable",
            "summary": "Use this field to specify the period for the graphs when the dashboard loads."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dashboard.ts",
            "line": 61
          },
          "name": "periodOverride",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.PeriodOverride"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "When the dashboard loads, the start time will be the default time range.",
            "remarks": "You can specify start without specifying end to specify a relative time range that ends with the current time.\nIn this case, the value of start must begin with -P, and you can use M, H, D, W and M as abbreviations for\nminutes, hours, days, weeks and months. For example, -PT8H shows the last 8 hours and -P3M shows the last three months.\nYou can also use start along with an end field, to specify an absolute time range.\nWhen specifying an absolute time range, use the ISO 8601 format. For example, 2018-12-17T06:00:00.000Z.",
            "stability": "stable",
            "summary": "The start of the time range to use for each widget on the dashboard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dashboard.ts",
            "line": 43
          },
          "name": "start",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No widgets",
            "remarks": "One array represents a row of widgets.",
            "stability": "stable",
            "summary": "Initial set of widgets on the dashboard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dashboard.ts",
            "line": 70
          },
          "name": "widgets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-cloudwatch.IWidget"
                  },
                  "kind": "array"
                }
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Dimension": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Metric dimension."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Dimension",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 31
      },
      "name": "Dimension",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the dimension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 35
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Value of the dimension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 40
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.GraphWidget": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
      "docs": {
        "stability": "stable",
        "summary": "A dashboard widget that displays metrics."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.GraphWidget",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.GraphWidgetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 188
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 196
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "GraphWidget"
    },
    "@aws-cdk/aws-cloudwatch.GraphWidgetProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a GraphWidget."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.GraphWidgetProps",
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.MetricWidgetProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 127
      },
      "name": "GraphWidgetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No metrics",
            "stability": "stable",
            "summary": "Metrics to display on left Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 133
          },
          "name": "left",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No annotations",
            "stability": "stable",
            "summary": "Annotations for the left Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 147
          },
          "name": "leftAnnotations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.HorizontalAnnotation"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Left Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 168
          },
          "name": "leftYAxis",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.YAxisProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- bottom",
            "stability": "stable",
            "summary": "Position of the legend."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 182
          },
          "name": "legendPosition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.LegendPosition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No metrics",
            "stability": "stable",
            "summary": "Metrics to display on right Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 140
          },
          "name": "right",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No annotations",
            "stability": "stable",
            "summary": "Annotations for the right Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 154
          },
          "name": "rightAnnotations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.HorizontalAnnotation"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Right Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 175
          },
          "name": "rightYAxis",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.YAxisProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether the graph should be shown as stacked lines."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 161
          },
          "name": "stacked",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.HorizontalAnnotation": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Horizontal annotation to be added to a graph."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.HorizontalAnnotation",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 275
      },
      "name": "HorizontalAnnotation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The value of the annotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 279
          },
          "name": "value",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatic color",
            "stability": "stable",
            "summary": "The hex color code, prefixed with '#' (e.g. '#00ff00'), to be used for the annotation. The `Color` class has a set of standard colors that can be used here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 294
          },
          "name": "color",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No shading",
            "stability": "stable",
            "summary": "Add shading above or below the annotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 301
          },
          "name": "fill",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Shading"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No label",
            "stability": "stable",
            "summary": "Label for the annotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 286
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether the annotation is visible."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 308
          },
          "name": "visible",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.IAlarm": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "stable",
        "summary": "Represents a CloudWatch Alarm."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.IAlarm",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alarm.ts",
        "line": 15
      },
      "name": "IAlarm",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Alarm ARN (i.e. arn:aws:cloudwatch:<region>:<account-id>:alarm:Foo)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 21
          },
          "name": "alarmArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Name of the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 28
          },
          "name": "alarmName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.IAlarmAction": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "stable",
        "summary": "Interface for objects that can be the targets of CloudWatch alarm actions."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.IAlarmAction",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alarm-action.ts",
        "line": 7
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the properties required to send alarm actions to this CloudWatch alarm."
          },
          "locationInModule": {
            "filename": "lib/alarm-action.ts",
            "line": 14
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "root Construct that allows creating new Constructs."
              },
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "docs": {
                "summary": "CloudWatch alarm that the action will target."
              },
              "name": "alarm",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.IAlarm"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.AlarmActionConfig"
            }
          }
        }
      ],
      "name": "IAlarmAction"
    },
    "@aws-cdk/aws-cloudwatch.IMetric": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "stable",
        "summary": "Interface for metrics."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.IMetric",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 6
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "deprecated": "Use `toMetricsConfig()` instead.",
            "stability": "deprecated",
            "summary": "Turn this metric object into an alarm configuration."
          },
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 17
          },
          "name": "toAlarmConfig",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricAlarmConfig"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "Use `toMetricsConfig()` instead.",
            "stability": "deprecated",
            "summary": "Turn this metric object into a graph configuration."
          },
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 24
          },
          "name": "toGraphConfig",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricGraphConfig"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Inspect the details of the metric object."
          },
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 10
          },
          "name": "toMetricConfig",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricConfig"
            }
          }
        }
      ],
      "name": "IMetric"
    },
    "@aws-cdk/aws-cloudwatch.IWidget": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "stable",
        "summary": "A single dashboard widget."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.IWidget",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/widget.ts",
        "line": 9
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Place the widget at a given position."
          },
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 23
          },
          "name": "position",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "y",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 28
          },
          "name": "toJson",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "IWidget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The amount of vertical grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 18
          },
          "name": "height",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The amount of horizontal grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 13
          },
          "name": "width",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.LegendPosition": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "stable",
        "summary": "The position of the legend on a GraphWidget."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.LegendPosition",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 363
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Legend appears below the graph (default)."
          },
          "name": "BOTTOM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add shading above the annotation."
          },
          "name": "RIGHT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add shading below the annotation."
          },
          "name": "HIDDEN"
        }
      ],
      "name": "LegendPosition"
    },
    "@aws-cdk/aws-cloudwatch.LogQueryWidget": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
      "docs": {
        "stability": "stable",
        "summary": "Display query results from Logs Insights."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.LogQueryWidget",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.LogQueryWidgetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-query.ts",
        "line": 64
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/log-query.ts",
            "line": 80
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "LogQueryWidget"
    },
    "@aws-cdk/aws-cloudwatch.LogQueryWidgetProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Query widget."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.LogQueryWidgetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-query.ts",
        "line": 7
      },
      "name": "LogQueryWidgetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Names of log groups to query."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-query.ts",
            "line": 18
          },
          "name": "logGroupNames",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "6",
            "stability": "stable",
            "summary": "Height of the widget."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-query.ts",
            "line": 58
          },
          "name": "height",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Exactly one of `queryString`, `queryLines` is required.",
            "remarks": "The query will be built by joining the lines together using `\\n|`.",
            "stability": "stable",
            "summary": "A sequence of lines to use to build the query."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-query.ts",
            "line": 37
          },
          "name": "queryLines",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Exactly one of `queryString`, `queryLines` is required.",
            "remarks": "Be sure to prepend every new line with a newline and pipe character\n(`\\n|`).",
            "stability": "stable",
            "summary": "Full query string for log insights."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-query.ts",
            "line": 28
          },
          "name": "queryString",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Current region",
            "stability": "stable",
            "summary": "The region the metrics of this widget should be taken from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-query.ts",
            "line": 44
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No title",
            "stability": "stable",
            "summary": "Title for the widget."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-query.ts",
            "line": 13
          },
          "name": "title",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "6",
            "stability": "stable",
            "summary": "Width of the widget, in a grid of 24 units wide."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-query.ts",
            "line": 51
          },
          "name": "width",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MathExpression": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "remarks": "The math expression is a combination of an expression (x+y) and metrics to apply expression on.\nIt also contains metadata which is used only in graphs, such as color and label.\nIt makes sense to embed this in here, so that compound constructs can attach\nthat metadata to metrics they expose.\n\nThis class does not represent a resource, so hence is not a construct. Instead,\nMathExpression is an abstraction that makes it easy to specify metrics for use in both\nalarms and graphs.",
        "stability": "stable",
        "summary": "A math expression built with metric(s) emitted by a service."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MathExpression",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MathExpressionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.IMetric"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/metric.ts",
        "line": 411
      },
      "methods": [
        {
          "docs": {
            "remarks": "Combines both properties that may adjust the metric (aggregation) as well\nas alarm properties.",
            "stability": "stable",
            "summary": "Make a new Alarm for this metric."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 505
          },
          "name": "createAlarm",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.CreateAlarmOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Turn this metric object into an alarm configuration."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 477
          },
          "name": "toAlarmConfig",
          "overrides": "@aws-cdk/aws-cloudwatch.IMetric",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricAlarmConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Turn this metric object into a graph configuration."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 481
          },
          "name": "toGraphConfig",
          "overrides": "@aws-cdk/aws-cloudwatch.IMetric",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricGraphConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Inspect the details of the metric object."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 485
          },
          "name": "toMetricConfig",
          "overrides": "@aws-cdk/aws-cloudwatch.IMetric",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 522
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "All properties except namespace and metricName can be changed.",
            "stability": "stable",
            "summary": "Return a copy of Metric with properties changed."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 460
          },
          "name": "with",
          "parameters": [
            {
              "docs": {
                "summary": "The set of properties to change."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MathExpressionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MathExpression"
            }
          }
        }
      ],
      "name": "MathExpression",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The expression defining the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 415
          },
          "name": "expression",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Aggregation period of this metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 436
          },
          "name": "period",
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The metrics used in the expression as KeyValuePair <id, metric>."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 420
          },
          "name": "usingMetrics",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The hex color code, prefixed with '#' (e.g. '#00ff00'), to use when this metric is rendered on a graph. The `Color` class has a set of standard colors that can be used here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 431
          },
          "name": "color",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Label for this metric when added to a Graph."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 425
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MathExpressionOptions": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configurable options for MathExpressions."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MathExpressionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric.ts",
        "line": 112
      },
      "name": "MathExpressionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Automatic color",
            "stability": "stable",
            "summary": "Color for this metric when added to a Graph in a Dashboard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 125
          },
          "name": "color",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Expression value is used as label",
            "stability": "stable",
            "summary": "Label for this metric when added to a Graph in a Dashboard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 118
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "remarks": "This period overrides all periods in the metrics used in this\nmath expression.",
            "stability": "stable",
            "summary": "The period over which the expression's statistics are applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 135
          },
          "name": "period",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MathExpressionProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a MathExpression."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MathExpressionProps",
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.MathExpressionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric.ts",
        "line": 141
      },
      "name": "MathExpressionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The expression defining the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 145
          },
          "name": "expression",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The key is the identifier that represents the given metric in the\nexpression, and the value is the actual Metric object.",
            "stability": "stable",
            "summary": "The metrics used in the expression, in a map."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 153
          },
          "name": "usingMetrics",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Metric": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "remarks": "The metric is a combination of a metric identifier (namespace, name and dimensions)\nand an aggregation function (statistic, period and unit).\n\nIt also contains metadata which is used only in graphs, such as color and label.\nIt makes sense to embed this in here, so that compound constructs can attach\nthat metadata to metrics they expose.\n\nThis class does not represent a resource, so hence is not a construct. Instead,\nMetric is an abstraction that makes it easy to specify metrics for use in both\nalarms and graphs.",
        "stability": "stable",
        "summary": "A metric emitted by a service."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Metric",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.IMetric"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/metric.ts",
        "line": 170
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant permissions to the given identity to write metrics."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 176
          },
          "name": "grantPutMetricData",
          "parameters": [
            {
              "docs": {
                "summary": "The IAM identity to give permissions to."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Returns a Metric object that uses the account and region from the Stack\nthe given construct is defined in. If the metric is subsequently used\nin a Dashboard or Alarm in a different Stack defined in a different\naccount or region, the appropriate 'region' and 'account' fields\nwill be added to it.\n\nIf the scope we attach to is in an environment-agnostic stack,\nnothing is done and the same Metric object is returned.",
            "stability": "stable",
            "summary": "Attach the metric object to the given construct scope."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 275
          },
          "name": "attachTo",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Combines both properties that may adjust the metric (aggregation) as well\nas alarm properties.",
            "stability": "stable",
            "summary": "Make a new Alarm for this metric."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 353
          },
          "name": "createAlarm",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.CreateAlarmOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Turn this metric object into an alarm configuration."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 304
          },
          "name": "toAlarmConfig",
          "overrides": "@aws-cdk/aws-cloudwatch.IMetric",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricAlarmConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Turn this metric object into a graph configuration."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 322
          },
          "name": "toGraphConfig",
          "overrides": "@aws-cdk/aws-cloudwatch.IMetric",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricGraphConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Inspect the details of the metric object."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 284
          },
          "name": "toMetricConfig",
          "overrides": "@aws-cdk/aws-cloudwatch.IMetric",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 371
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "All properties except namespace and metricName can be changed.",
            "stability": "stable",
            "summary": "Return a copy of Metric `with` properties changed."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 234
          },
          "name": "with",
          "parameters": [
            {
              "docs": {
                "summary": "The set of properties to change."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "Metric",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Name of this metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 189
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Namespace of this metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 187
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Period of this metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 191
          },
          "name": "period",
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Statistic of this metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 193
          },
          "name": "statistic",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Account which this metric comes from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 203
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The hex color code used when this metric is rendered on a graph."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 197
          },
          "name": "color",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Dimensions of this metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 185
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Label for this metric when added to a Graph in a Dashboard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 195
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Region which this metric comes from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 206
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Unit of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 200
          },
          "name": "unit",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Unit"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricAlarmConfig": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "deprecated": "Replaced by MetricConfig",
        "stability": "deprecated",
        "summary": "Properties used to construct the Metric identifying part of an Alarm."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricAlarmConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 330
      },
      "name": "MetricAlarmConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "Name of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 344
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "Namespace of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 339
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "How many seconds to aggregate over."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 349
          },
          "name": "period",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The dimensions to apply to the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 334
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.Dimension"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "Percentile aggregation function to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 359
          },
          "name": "extendedStatistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "Simple aggregation function to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 354
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Statistic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The unit of the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 364
          },
          "name": "unit",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Unit"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricConfig": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties of a rendered metric."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 216
      },
      "name": "MetricConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "In case the metric is a math expression, the details of the math expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 229
          },
          "name": "mathExpression",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.MetricExpressionConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "In case the metric represents a query, the details of the query."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 222
          },
          "name": "metricStat",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.MetricStatConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "remarks": "Examples are 'label' and 'color', but any key in here will be\nadded to dashboard graphs.",
            "stability": "stable",
            "summary": "Additional properties which will be rendered if the metric is used in a dashboard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 239
          },
          "name": "renderingProperties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricExpressionConfig": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a concrete metric."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricExpressionConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 308
      },
      "name": "MetricExpressionConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Math expression for the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 312
          },
          "name": "expression",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "How many seconds to aggregate over."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 322
          },
          "name": "period",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Metrics used in the math expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 317
          },
          "name": "usingMetrics",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricGraphConfig": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "deprecated": "Replaced by MetricConfig",
        "stability": "deprecated",
        "summary": "Properties used to construct the Metric identifying part of a Graph."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricGraphConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 372
      },
      "name": "MetricGraphConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "Name of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 386
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "Namespace of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 381
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "Use `period` in `renderingProperties`",
            "stability": "deprecated",
            "summary": "How many seconds to aggregate over."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 398
          },
          "name": "period",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "Rendering properties override yAxis parameter of the widget object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 391
          },
          "name": "renderingProperties",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.MetricRenderingProperties"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "Use `color` in `renderingProperties`",
            "stability": "deprecated",
            "summary": "Color for the graph line."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 412
          },
          "name": "color",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The dimensions to apply to the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 376
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.Dimension"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "Use `label` in `renderingProperties`",
            "stability": "deprecated",
            "summary": "Label for the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 405
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "Use `stat` in `renderingProperties`",
            "stability": "deprecated",
            "summary": "Aggregation function to use (can be either simple or a percentile)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 419
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "not used in dashboard widgets",
            "stability": "deprecated",
            "summary": "The unit of the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 426
          },
          "name": "unit",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Unit"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricOptions": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties of a metric that can be changed."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions",
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.CommonMetricOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric.ts",
        "line": 106
      },
      "name": "MetricOptions"
    },
    "@aws-cdk/aws-cloudwatch.MetricProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a metric."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricProps",
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.CommonMetricOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric.ts",
        "line": 91
      },
      "name": "MetricProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 100
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Namespace of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 95
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricRenderingProperties": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "deprecated": "Replaced by MetricConfig.",
        "stability": "deprecated",
        "summary": "Custom rendering properties that override the default rendering properties specified in the yAxis parameter of the widget object."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricRenderingProperties",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 434
      },
      "name": "MetricRenderingProperties",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "How many seconds to aggregate over."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 438
          },
          "name": "period",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The hex color code, prefixed with '#' (e.g. '#00ff00'), to use when this metric is rendered on a graph. The `Color` class has a set of standard colors that can be used here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 449
          },
          "name": "color",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "Label for the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 443
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "Aggregation function to use (can be either simple or a percentile)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 454
          },
          "name": "stat",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricStatConfig": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "remarks": "NOTE: `unit` is no longer on this object since it is only used for `Alarms`, and doesn't mean what one\nwould expect it to mean there anyway. It is most likely to be misused.",
        "stability": "stable",
        "summary": "Properties for a concrete metric."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricStatConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 248
      },
      "name": "MetricStatConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 264
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Namespace of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 259
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "How many seconds to aggregate over."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 269
          },
          "name": "period",
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Aggregation function to use (can be either simple or a percentile)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 274
          },
          "name": "statistic",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Deployment account.",
            "stability": "stable",
            "summary": "Account which this metric comes from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 302
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "stable",
            "summary": "The dimensions to apply to the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 254
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.Dimension"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Deployment region.",
            "stability": "stable",
            "summary": "Region which this metric comes from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 295
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Refer to all metric datums",
            "remarks": "Only refer to datums emitted to the metric stream with the given unit and\nignore all others. Only useful when datums are being emitted to the same\nmetric stream under different units.\n\nThis field has been renamed from plain `unit` to clearly communicate\nits purpose.",
            "stability": "stable",
            "summary": "Unit used to filter the metric stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 288
          },
          "name": "unitFilter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Unit"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricWidgetProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Basic properties for widgets that display metrics."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricWidgetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 10
      },
      "name": "MetricWidgetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- 6 for Alarm and Graph widgets.\n3 for single value widgets where most recent value of a metric is displayed.",
            "stability": "stable",
            "summary": "Height of the widget."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 38
          },
          "name": "height",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Current region",
            "stability": "stable",
            "summary": "The region the metrics of this graph should be taken from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 23
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Title for the graph."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 16
          },
          "name": "title",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "6",
            "stability": "stable",
            "summary": "Width of the widget, in a grid of 24 units wide."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 30
          },
          "name": "width",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.PeriodOverride": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "stable",
        "summary": "Specify the period for graphs when the CloudWatch dashboard loads."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.PeriodOverride",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/dashboard.ts",
        "line": 9
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Period of all graphs on the dashboard automatically adapt to the time range of the dashboard."
          },
          "name": "AUTO"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Period set for each graph will be used."
          },
          "name": "INHERIT"
        }
      ],
      "name": "PeriodOverride"
    },
    "@aws-cdk/aws-cloudwatch.Row": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "remarks": "Widgets will be laid out next to each other",
        "stability": "stable",
        "summary": "A widget that contains other widgets in a horizontal row."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Row",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "widgets",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.IWidget"
            },
            "variadic": true
          }
        ],
        "variadic": true
      },
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.IWidget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/layout.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Place the widget at a given position."
          },
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 46
          },
          "name": "position",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "y",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 52
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Row",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The amount of vertical grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 12
          },
          "name": "height",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The amount of horizontal grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 11
          },
          "name": "width",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Shading": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "stable",
        "summary": "Fill shading options that will be used with an annotation."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Shading",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 314
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Don't add shading."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add shading above the annotation."
          },
          "name": "ABOVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add shading below the annotation."
          },
          "name": "BELOW"
        }
      ],
      "name": "Shading"
    },
    "@aws-cdk/aws-cloudwatch.SingleValueWidget": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
      "docs": {
        "stability": "stable",
        "summary": "A dashboard widget that displays the most recent value for every metric."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.SingleValueWidget",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.SingleValueWidgetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 246
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 254
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "SingleValueWidget"
    },
    "@aws-cdk/aws-cloudwatch.SingleValueWidgetProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a SingleValueWidget."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.SingleValueWidgetProps",
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.MetricWidgetProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 229
      },
      "name": "SingleValueWidgetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Metrics to display."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 233
          },
          "name": "metrics",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to show the value from the entire time range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 240
          },
          "name": "setPeriodToTimeRange",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Spacer": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "stable",
        "summary": "A widget that doesn't display anything but takes up space."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Spacer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.SpacerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.IWidget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/layout.ts",
        "line": 122
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Place the widget at a given position."
          },
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 131
          },
          "name": "position",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "parameters": [
            {
              "name": "_x",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "_y",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 135
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Spacer",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The amount of vertical grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 124
          },
          "name": "height",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The amount of horizontal grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 123
          },
          "name": "width",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.SpacerProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Props of the spacer."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.SpacerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/layout.ts",
        "line": 103
      },
      "name": "SpacerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": ": 1",
            "stability": "stable",
            "summary": "Height of the spacer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 116
          },
          "name": "height",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "stable",
            "summary": "Width of the spacer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 109
          },
          "name": "width",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Statistic": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "stable",
        "summary": "Statistic to use over the aggregation period."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Statistic",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 46
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The count (number) of data points used for the statistical calculation."
          },
          "name": "SAMPLE_COUNT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The value of Sum / SampleCount during the specified period."
          },
          "name": "AVERAGE"
        },
        {
          "docs": {
            "remarks": "This statistic can be useful for determining the total volume of a metric.",
            "stability": "stable",
            "summary": "All values submitted for the matching metric added together."
          },
          "name": "SUM"
        },
        {
          "docs": {
            "remarks": "You can use this value to determine low volumes of activity for your application.",
            "stability": "stable",
            "summary": "The lowest value observed during the specified period."
          },
          "name": "MINIMUM"
        },
        {
          "docs": {
            "remarks": "You can use this value to determine high volumes of activity for your application.",
            "stability": "stable",
            "summary": "The highest value observed during the specified period."
          },
          "name": "MAXIMUM"
        }
      ],
      "name": "Statistic"
    },
    "@aws-cdk/aws-cloudwatch.TextWidget": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
      "docs": {
        "stability": "stable",
        "summary": "A dashboard widget that displays MarkDown."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.TextWidget",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.TextWidgetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/text.ts",
        "line": 30
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Place the widget at a given position."
          },
          "locationInModule": {
            "filename": "lib/text.ts",
            "line": 38
          },
          "name": "position",
          "overrides": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "y",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/text.ts",
            "line": 43
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "TextWidget"
    },
    "@aws-cdk/aws-cloudwatch.TextWidgetProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Text widget."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.TextWidgetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/text.ts",
        "line": 6
      },
      "name": "TextWidgetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The text to display, in MarkDown format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/text.ts",
            "line": 10
          },
          "name": "markdown",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "2",
            "stability": "stable",
            "summary": "Height of the widget."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/text.ts",
            "line": 24
          },
          "name": "height",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "6",
            "stability": "stable",
            "summary": "Width of the widget, in a grid of 24 units wide."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/text.ts",
            "line": 17
          },
          "name": "width",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.TreatMissingData": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "stable",
        "summary": "Specify how missing data points are treated during alarm evaluation."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.TreatMissingData",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/alarm.ts",
        "line": 85
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Missing data points are treated as breaching the threshold."
          },
          "name": "BREACHING"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Missing data points are treated as being within the threshold."
          },
          "name": "NOT_BREACHING"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The current alarm state is maintained."
          },
          "name": "IGNORE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The alarm does not consider missing data points when evaluating whether to change state."
          },
          "name": "MISSING"
        }
      ],
      "name": "TreatMissingData"
    },
    "@aws-cdk/aws-cloudwatch.Unit": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "stable",
        "summary": "Unit for metric."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Unit",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 76
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Seconds."
          },
          "name": "SECONDS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Microseconds."
          },
          "name": "MICROSECONDS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Milliseconds."
          },
          "name": "MILLISECONDS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Bytes."
          },
          "name": "BYTES"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Kilobytes."
          },
          "name": "KILOBYTES"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Megabytes."
          },
          "name": "MEGABYTES"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gigabytes."
          },
          "name": "GIGABYTES"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Terabytes."
          },
          "name": "TERABYTES"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Bits."
          },
          "name": "BITS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Kilobits."
          },
          "name": "KILOBITS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Megabits."
          },
          "name": "MEGABITS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gigabits."
          },
          "name": "GIGABITS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Terabits."
          },
          "name": "TERABITS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Percent."
          },
          "name": "PERCENT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Count."
          },
          "name": "COUNT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Bytes/second (B/s)."
          },
          "name": "BYTES_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Kilobytes/second (kB/s)."
          },
          "name": "KILOBYTES_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Megabytes/second (MB/s)."
          },
          "name": "MEGABYTES_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gigabytes/second (GB/s)."
          },
          "name": "GIGABYTES_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Terabytes/second (TB/s)."
          },
          "name": "TERABYTES_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Bits/second (b/s)."
          },
          "name": "BITS_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Kilobits/second (kb/s)."
          },
          "name": "KILOBITS_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Megabits/second (Mb/s)."
          },
          "name": "MEGABITS_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gigabits/second (Gb/s)."
          },
          "name": "GIGABITS_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Terabits/second (Tb/s)."
          },
          "name": "TERABITS_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Count/second."
          },
          "name": "COUNT_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "No unit."
          },
          "name": "NONE"
        }
      ],
      "name": "Unit"
    },
    "@aws-cdk/aws-cloudwatch.YAxisProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Y-Axis."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.YAxisProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 44
      },
      "name": "YAxisProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No label",
            "stability": "stable",
            "summary": "The label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 64
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No maximum value",
            "stability": "stable",
            "summary": "The max value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 57
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "stability": "stable",
            "summary": "The min value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 50
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to show units."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 71
          },
          "name": "showUnits",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    }
  },
  "version": "1.45.0",
  "fingerprint": "G2Hs/38g1U446TMg1PNp+SgA4HvSK9qqFxRYygly5gg="
}
