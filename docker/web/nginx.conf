user nginx;

worker_processes auto;
worker_cpu_affinity auto;

pid /run/nginx.pid;

events {
    multi_accept on;
    use epoll;
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	log_format json_log escape=json
	                     '{ "timestamp": "$time_iso8601", '
                         '"remote_addr": "$remote_addr", '
                         '"remote_user": "$remote_user", '
                         '"body_bytes_sent": "$body_bytes_sent", '
                         '"status": "$status", '
                         '"request": "$request", '
                         '"request_method": "$request_method", '
                         '"request_time": "$request_time", '
                         '"upstream_addr": "$upstream_addr", '
                         '"upstream_status": "$upstream_status", '
                         '"upstream_connect_time": "$upstream_connect_time", '
                         '"upstream_header_time": "$upstream_header_time", '
                         '"upstream_response_time": "$upstream_response_time", '
                         '"http_host": "$http_host", '
                         '"http_referrer": "$http_referer", '
                         '"http_user_agent": "$http_user_agent", '
                         '"http_x_amz_cf_id": "$http_x_amz_cf_id", '
                         '"http_via": "$http_via", '
                         '"http_x_forwarded_for": "$http_x_forwarded_for", '
                         '"gzip_ratio": "$gzip_ratio"}';

	access_log /proc/self/fd/1 json_log;
	error_log /proc/self/fd/2 warn;

	server {
        listen 80;
        server_name _;
        charset utf-8;
        client_max_body_size 4G;

        location / {
            proxy_redirect off;
            proxy_buffering off;
            proxy_pass http://app:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}











